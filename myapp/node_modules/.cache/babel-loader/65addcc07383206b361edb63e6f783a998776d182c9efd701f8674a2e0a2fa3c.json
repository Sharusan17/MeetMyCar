{"ast":null,"code":"/**\n * \n * DocumentSnapshot representation wrapper\n */\nimport DocumentReference from './DocumentReference';\nimport FieldPath from './FieldPath';\nimport Path from './Path';\nimport { isObject, deepGet } from '../../utils';\nimport { parseNativeMap } from './utils/serialize';\nconst extractFieldPathData = (data, segments) => {\n  if (!data || !isObject(data)) {\n    return undefined;\n  }\n  const pathValue = data[segments[0]];\n  if (segments.length === 1) {\n    return pathValue;\n  }\n  return extractFieldPathData(pathValue, segments.slice(1));\n};\n/**\n * @class DocumentSnapshot\n */\n\nexport default class DocumentSnapshot {\n  constructor(firestore, nativeData) {\n    this._data = parseNativeMap(firestore, nativeData.data);\n    this._metadata = nativeData.metadata;\n    this._ref = new DocumentReference(firestore, Path.fromName(nativeData.path));\n  }\n  get exists() {\n    return this._data !== undefined;\n  }\n  get id() {\n    return this._ref.id;\n  }\n  get metadata() {\n    return this._metadata;\n  }\n  get ref() {\n    return this._ref;\n  }\n  data = () => this._data;\n  get = fieldPath => {\n    if (fieldPath instanceof FieldPath) {\n      return extractFieldPathData(this._data, fieldPath._segments);\n    }\n    return deepGet(this._data, fieldPath, '.');\n  };\n}","map":{"version":3,"names":["DocumentReference","FieldPath","Path","isObject","deepGet","parseNativeMap","extractFieldPathData","data","segments","undefined","pathValue","length","slice","DocumentSnapshot","constructor","firestore","nativeData","_data","_metadata","metadata","_ref","fromName","path","exists","id","ref","get","fieldPath","_segments"],"sources":["/Users/sharusan/MeetMyCar/myapp/node_modules/react-native-firebase/dist/modules/firestore/DocumentSnapshot.js"],"sourcesContent":["/**\n * \n * DocumentSnapshot representation wrapper\n */\nimport DocumentReference from './DocumentReference';\nimport FieldPath from './FieldPath';\nimport Path from './Path';\nimport { isObject, deepGet } from '../../utils';\nimport { parseNativeMap } from './utils/serialize';\n\nconst extractFieldPathData = (data, segments) => {\n  if (!data || !isObject(data)) {\n    return undefined;\n  }\n\n  const pathValue = data[segments[0]];\n\n  if (segments.length === 1) {\n    return pathValue;\n  }\n\n  return extractFieldPathData(pathValue, segments.slice(1));\n};\n/**\n * @class DocumentSnapshot\n */\n\n\nexport default class DocumentSnapshot {\n  constructor(firestore, nativeData) {\n    this._data = parseNativeMap(firestore, nativeData.data);\n    this._metadata = nativeData.metadata;\n    this._ref = new DocumentReference(firestore, Path.fromName(nativeData.path));\n  }\n\n  get exists() {\n    return this._data !== undefined;\n  }\n\n  get id() {\n    return this._ref.id;\n  }\n\n  get metadata() {\n    return this._metadata;\n  }\n\n  get ref() {\n    return this._ref;\n  }\n\n  data = () => this._data;\n  get = fieldPath => {\n    if (fieldPath instanceof FieldPath) {\n      return extractFieldPathData(this._data, fieldPath._segments);\n    }\n\n    return deepGet(this._data, fieldPath, '.');\n  };\n}"],"mappings":"AAAA;AACA;AACA;AACA;AACA,OAAOA,iBAAiB,MAAM,qBAAqB;AACnD,OAAOC,SAAS,MAAM,aAAa;AACnC,OAAOC,IAAI,MAAM,QAAQ;AACzB,SAASC,QAAQ,EAAEC,OAAO,QAAQ,aAAa;AAC/C,SAASC,cAAc,QAAQ,mBAAmB;AAElD,MAAMC,oBAAoB,GAAGA,CAACC,IAAI,EAAEC,QAAQ,KAAK;EAC/C,IAAI,CAACD,IAAI,IAAI,CAACJ,QAAQ,CAACI,IAAI,CAAC,EAAE;IAC5B,OAAOE,SAAS;EAClB;EAEA,MAAMC,SAAS,GAAGH,IAAI,CAACC,QAAQ,CAAC,CAAC,CAAC,CAAC;EAEnC,IAAIA,QAAQ,CAACG,MAAM,KAAK,CAAC,EAAE;IACzB,OAAOD,SAAS;EAClB;EAEA,OAAOJ,oBAAoB,CAACI,SAAS,EAAEF,QAAQ,CAACI,KAAK,CAAC,CAAC,CAAC,CAAC;AAC3D,CAAC;AACD;AACA;AACA;;AAGA,eAAe,MAAMC,gBAAgB,CAAC;EACpCC,WAAWA,CAACC,SAAS,EAAEC,UAAU,EAAE;IACjC,IAAI,CAACC,KAAK,GAAGZ,cAAc,CAACU,SAAS,EAAEC,UAAU,CAACT,IAAI,CAAC;IACvD,IAAI,CAACW,SAAS,GAAGF,UAAU,CAACG,QAAQ;IACpC,IAAI,CAACC,IAAI,GAAG,IAAIpB,iBAAiB,CAACe,SAAS,EAAEb,IAAI,CAACmB,QAAQ,CAACL,UAAU,CAACM,IAAI,CAAC,CAAC;EAC9E;EAEA,IAAIC,MAAMA,CAAA,EAAG;IACX,OAAO,IAAI,CAACN,KAAK,KAAKR,SAAS;EACjC;EAEA,IAAIe,EAAEA,CAAA,EAAG;IACP,OAAO,IAAI,CAACJ,IAAI,CAACI,EAAE;EACrB;EAEA,IAAIL,QAAQA,CAAA,EAAG;IACb,OAAO,IAAI,CAACD,SAAS;EACvB;EAEA,IAAIO,GAAGA,CAAA,EAAG;IACR,OAAO,IAAI,CAACL,IAAI;EAClB;EAEAb,IAAI,GAAGA,CAAA,KAAM,IAAI,CAACU,KAAK;EACvBS,GAAG,GAAGC,SAAS,IAAI;IACjB,IAAIA,SAAS,YAAY1B,SAAS,EAAE;MAClC,OAAOK,oBAAoB,CAAC,IAAI,CAACW,KAAK,EAAEU,SAAS,CAACC,SAAS,CAAC;IAC9D;IAEA,OAAOxB,OAAO,CAAC,IAAI,CAACa,KAAK,EAAEU,SAAS,EAAE,GAAG,CAAC;EAC5C,CAAC;AACH"},"metadata":{},"sourceType":"module","externalDependencies":[]}