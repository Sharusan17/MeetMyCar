{"ast":null,"code":"import { getNativeModule } from '../../utils/native';\nimport { isAndroid, isIOS } from '../../utils';\n\n/**\n * Interface representing an Auth instance's settings, currently used\n * for enabling/disabling app verification for phone Auth testing. *\n */\nexport default class AuthSettings {\n  constructor(auth) {\n    this._auth = auth;\n    this._appVerificationDisabledForTesting = false;\n  }\n  /**\n   * Flag to determine whether app verification should be disabled for testing or not.\n   *\n   * @platform iOS\n   * @return {boolean}\n   */\n\n  get appVerificationDisabledForTesting() {\n    return this._appVerificationDisabledForTesting;\n  }\n  /**\n   * Flag to determine whether app verification should be disabled for testing or not.\n   *\n   * @platform iOS\n   * @param disabled\n   */\n\n  set appVerificationDisabledForTesting(disabled) {\n    if (isIOS) {\n      this._appVerificationDisabledForTesting = disabled;\n      getNativeModule(this._auth).setAppVerificationDisabledForTesting(disabled);\n    }\n  }\n  /**\n   * The phone number and SMS code here must have been configured in the\n   * Firebase Console (Authentication > Sign In Method > Phone).\n   *\n   * Calling this method a second time will overwrite the previously passed parameters.\n   * Only one number can be configured at a given time.\n   *\n   * @platform Android\n   * @param phoneNumber\n   * @param smsCode\n   * @return {*}\n   */\n\n  setAutoRetrievedSmsCodeForPhoneNumber(phoneNumber, smsCode) {\n    if (isAndroid) {\n      return getNativeModule(this._auth).setAutoRetrievedSmsCodeForPhoneNumber(phoneNumber, smsCode);\n    }\n    return Promise.resolve(null);\n  }\n}","map":{"version":3,"names":["getNativeModule","isAndroid","isIOS","AuthSettings","constructor","auth","_auth","_appVerificationDisabledForTesting","appVerificationDisabledForTesting","disabled","setAppVerificationDisabledForTesting","setAutoRetrievedSmsCodeForPhoneNumber","phoneNumber","smsCode","Promise","resolve"],"sources":["/Users/sharusan/MeetMyCar/myapp/node_modules/react-native-firebase/dist/modules/auth/AuthSettings.js"],"sourcesContent":["import { getNativeModule } from '../../utils/native';\nimport { isAndroid, isIOS } from '../../utils';\n\n/**\n * Interface representing an Auth instance's settings, currently used\n * for enabling/disabling app verification for phone Auth testing. *\n */\nexport default class AuthSettings {\n  constructor(auth) {\n    this._auth = auth;\n    this._appVerificationDisabledForTesting = false;\n  }\n  /**\n   * Flag to determine whether app verification should be disabled for testing or not.\n   *\n   * @platform iOS\n   * @return {boolean}\n   */\n\n\n  get appVerificationDisabledForTesting() {\n    return this._appVerificationDisabledForTesting;\n  }\n  /**\n   * Flag to determine whether app verification should be disabled for testing or not.\n   *\n   * @platform iOS\n   * @param disabled\n   */\n\n\n  set appVerificationDisabledForTesting(disabled) {\n    if (isIOS) {\n      this._appVerificationDisabledForTesting = disabled;\n      getNativeModule(this._auth).setAppVerificationDisabledForTesting(disabled);\n    }\n  }\n  /**\n   * The phone number and SMS code here must have been configured in the\n   * Firebase Console (Authentication > Sign In Method > Phone).\n   *\n   * Calling this method a second time will overwrite the previously passed parameters.\n   * Only one number can be configured at a given time.\n   *\n   * @platform Android\n   * @param phoneNumber\n   * @param smsCode\n   * @return {*}\n   */\n\n\n  setAutoRetrievedSmsCodeForPhoneNumber(phoneNumber, smsCode) {\n    if (isAndroid) {\n      return getNativeModule(this._auth).setAutoRetrievedSmsCodeForPhoneNumber(phoneNumber, smsCode);\n    }\n\n    return Promise.resolve(null);\n  }\n\n}"],"mappings":"AAAA,SAASA,eAAe,QAAQ,oBAAoB;AACpD,SAASC,SAAS,EAAEC,KAAK,QAAQ,aAAa;;AAE9C;AACA;AACA;AACA;AACA,eAAe,MAAMC,YAAY,CAAC;EAChCC,WAAWA,CAACC,IAAI,EAAE;IAChB,IAAI,CAACC,KAAK,GAAGD,IAAI;IACjB,IAAI,CAACE,kCAAkC,GAAG,KAAK;EACjD;EACA;AACF;AACA;AACA;AACA;AACA;;EAGE,IAAIC,iCAAiCA,CAAA,EAAG;IACtC,OAAO,IAAI,CAACD,kCAAkC;EAChD;EACA;AACF;AACA;AACA;AACA;AACA;;EAGE,IAAIC,iCAAiCA,CAACC,QAAQ,EAAE;IAC9C,IAAIP,KAAK,EAAE;MACT,IAAI,CAACK,kCAAkC,GAAGE,QAAQ;MAClDT,eAAe,CAAC,IAAI,CAACM,KAAK,CAAC,CAACI,oCAAoC,CAACD,QAAQ,CAAC;IAC5E;EACF;EACA;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;EAGEE,qCAAqCA,CAACC,WAAW,EAAEC,OAAO,EAAE;IAC1D,IAAIZ,SAAS,EAAE;MACb,OAAOD,eAAe,CAAC,IAAI,CAACM,KAAK,CAAC,CAACK,qCAAqC,CAACC,WAAW,EAAEC,OAAO,CAAC;IAChG;IAEA,OAAOC,OAAO,CAACC,OAAO,CAAC,IAAI,CAAC;EAC9B;AAEF"},"metadata":{},"sourceType":"module","externalDependencies":[]}