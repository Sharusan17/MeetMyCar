{"ast":null,"code":"var _jsxFileName = \"/Users/sharusan/MeetMyCar/myapp/src/VerifyEmail.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { useAuth } from './AuthContext';\nimport { useLocation, useNavigate } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst VerifyEmail = () => {\n  _s();\n  const [verified, setVerified] = useState(false);\n  const {\n    currentUser,\n    logout\n  } = useAuth();\n  const [message, setMessage] = useState('');\n  const [error, setError] = useState('');\n  const [emailSent, setEmailSent] = useState(false);\n  const navigate = useNavigate();\n  const location = useLocation();\n  useEffect(() => {\n    const checkVerified = async () => {\n      const newEmail = new URLSearchParams(location.search).get('newEmail');\n      try {\n        console.log(\"Checking Verification...\");\n        if (newEmail) {\n          console.log(\"New Email Being Verified...\");\n          const newEmailUser = await getUserByEmail(newEmail);\n          if (newEmail.emailVerified) {\n            console.log(\"New Email Verified\");\n            setVerified(true);\n            clearInterval(intervalId);\n            await logout();\n            navigate('/login');\n          }\n        } else {\n          await currentUser.reload();\n          console.log(\"Email Being Verified...\");\n          if (currentUser.emailVerified) {\n            console.log(\"Email Being Verified\");\n            setVerified(true);\n            clearInterval(intervalId);\n            navigate(\"/registervehicle\");\n          }\n        }\n      } catch (error) {\n        console.log('Error checking email verification status', error);\n      }\n    };\n    const intervalId = setInterval(checkVerified, 1000);\n    return () => clearInterval(intervalId);\n  }, [currentUser, location.search, navigate, logout]);\n  const resendEmail = async () => {\n    setError('');\n    setMessage('');\n    setEmailSent(true);\n    try {\n      await currentUser.sendEmailVerification();\n      setMessage(\"Verification Email Sent\");\n      setEmailSent(false);\n    } catch (error) {\n      setEmailSent(false);\n      if (error.code === 'auth/too-many-requests') {\n        setError(\"Try Again Later. Too Many Request\");\n      } else {\n        setError(\"Failed To  Send Verification Email\");\n      }\n      console.log(\"Error Sending Verification Email\", error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"text-center mb-4\",\n      children: \"Verify Email\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: message\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: error\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 13\n      }, this), verified ? /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Email Verified Reloading....\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 21\n      }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Please Verify Email. Check Inbox or Junk\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: resendEmail,\n          disabled: emailSent,\n          children: emailSent ? 'Email Sending...' : 'Resend Verification Email'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true);\n};\n_s(VerifyEmail, \"gQiKzbnskcRcMsLP6kojB+h8NoA=\", false, function () {\n  return [useAuth, useNavigate, useLocation];\n});\n_c = VerifyEmail;\nexport default VerifyEmail;\nvar _c;\n$RefreshReg$(_c, \"VerifyEmail\");","map":{"version":3,"names":["React","useEffect","useState","useAuth","useLocation","useNavigate","jsxDEV","_jsxDEV","Fragment","_Fragment","VerifyEmail","_s","verified","setVerified","currentUser","logout","message","setMessage","error","setError","emailSent","setEmailSent","navigate","location","checkVerified","newEmail","URLSearchParams","search","get","console","log","newEmailUser","getUserByEmail","emailVerified","clearInterval","intervalId","reload","setInterval","resendEmail","sendEmailVerification","code","children","className","fileName","_jsxFileName","lineNumber","columnNumber","onClick","disabled","_c","$RefreshReg$"],"sources":["/Users/sharusan/MeetMyCar/myapp/src/VerifyEmail.js"],"sourcesContent":["import React, {useEffect, useState} from 'react'\nimport { useAuth } from './AuthContext'\nimport {useLocation, useNavigate} from 'react-router-dom'\n\nconst VerifyEmail = () => {\n\n    const [verified, setVerified] = useState(false)\n    const {currentUser, logout} = useAuth()\n\n    const [message, setMessage] = useState('')\n    const [error, setError] = useState('')\n    const [emailSent, setEmailSent] = useState(false)\n\n    const navigate = useNavigate()\n    const location = useLocation()\n\n\n    useEffect(() => {\n        const checkVerified = async () => {\n            const newEmail = new URLSearchParams(location.search).get('newEmail')\n            try{\n                console.log(\"Checking Verification...\")\n\n                if (newEmail){\n                    console.log(\"New Email Being Verified...\")\n                    const newEmailUser  =await getUserByEmail(newEmail)\n                    if(newEmail.emailVerified){\n                        console.log(\"New Email Verified\")\n                        setVerified(true)\n                        clearInterval(intervalId)\n                        await logout()\n                        navigate('/login')\n                    }\n                } else{\n                    await currentUser.reload();\n                    console.log(\"Email Being Verified...\")\n                    if (currentUser.emailVerified ){\n                        console.log(\"Email Being Verified\")\n                        setVerified(true)\n                        clearInterval(intervalId)\n                        navigate(\"/registervehicle\")\n                    }\n                }\n            }catch (error) {\n                console.log('Error checking email verification status', error)\n            }\n        }\n        const intervalId = setInterval(checkVerified, 1000)\n        return () => clearInterval(intervalId)\n    }, [currentUser, location.search, navigate, logout]); \n\n    const resendEmail = async() => {\n        setError('')\n        setMessage('')\n        setEmailSent(true)\n        try{\n            await currentUser.sendEmailVerification();\n            setMessage(\"Verification Email Sent\")\n            setEmailSent(false)\n        }catch (error){\n            setEmailSent(false)\n            if (error.code === 'auth/too-many-requests'){\n                setError(\"Try Again Later. Too Many Request\")\n            }else{\n                setError(\"Failed To  Send Verification Email\")\n            }\n            console.log(\"Error Sending Verification Email\", error)\n        }\n    }\n\n  return (\n      <>\n        <h1 className=\"text-center mb-4\">Verify Email</h1>\n        <div>\n            <p>{message}</p>\n            <p>{error}</p>\n            {verified \n                ? (\n                    <p>Email Verified Reloading....</p>\n                ):(\n                <>\n                    <p>Please Verify Email. Check Inbox or Junk</p>\n                    <button onClick={resendEmail} disabled={emailSent}>\n                        {emailSent ? 'Email Sending...' : 'Resend Verification Email'}\n                    </button>\n                </>\n            )}\n        </div>\n      </> \n  )\n}\n\nexport default VerifyEmail"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}