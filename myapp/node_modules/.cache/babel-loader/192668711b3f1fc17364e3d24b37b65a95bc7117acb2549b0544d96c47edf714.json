{"ast":null,"code":"/**\n * \n * AdMob representation wrapper\n */\nimport { SharedEventEmitter } from '../../utils/events';\nimport { getLogger } from '../../utils/log';\nimport { getNativeModule } from '../../utils/native';\nimport ModuleBase from '../../utils/ModuleBase';\nimport Interstitial from './Interstitial';\nimport RewardedVideo from './RewardedVideo';\nimport AdRequest from './AdRequest';\nimport VideoOptions from './VideoOptions';\nimport Banner from './Banner';\nimport NativeExpress from './NativeExpress';\nimport EventTypes, { NativeExpressEventTypes, RewardedVideoEventTypes } from './EventTypes';\nconst NATIVE_EVENTS = ['interstitial_event', 'rewarded_video_event'];\nexport const MODULE_NAME = 'RNFirebaseAdMob';\nexport const NAMESPACE = 'admob';\nexport default class AdMob extends ModuleBase {\n  constructor(app) {\n    super(app, {\n      events: NATIVE_EVENTS,\n      moduleName: MODULE_NAME,\n      hasMultiAppSupport: false,\n      hasCustomUrlSupport: false,\n      namespace: NAMESPACE\n    });\n    this._initialized = false;\n    this._appId = null;\n    SharedEventEmitter.addListener('interstitial_event', this._onInterstitialEvent.bind(this));\n    SharedEventEmitter.addListener('rewarded_video_event', this._onRewardedVideoEvent.bind(this));\n  }\n  _onInterstitialEvent(event) {\n    const {\n      adUnit\n    } = event;\n    const jsEventType = `interstitial_${adUnit}`;\n    if (SharedEventEmitter.listeners(jsEventType).length === 0) {// TODO\n    }\n    SharedEventEmitter.emit(jsEventType, event);\n  }\n  _onRewardedVideoEvent(event) {\n    const {\n      adUnit\n    } = event;\n    const jsEventType = `rewarded_video_${adUnit}`;\n    if (SharedEventEmitter.listeners(jsEventType).length === 0) {// TODO\n    }\n    SharedEventEmitter.emit(jsEventType, event);\n  }\n  initialize(appId) {\n    if (this._initialized) {\n      getLogger(this).warn('AdMob has already been initialized!');\n    } else {\n      this._initialized = true;\n      this._appId = appId;\n      getNativeModule(this).initialize(appId);\n    }\n  }\n  openDebugMenu() {\n    if (!this._initialized) {\n      getLogger(this).warn('AdMob needs to be initialized before opening the dev menu!');\n    } else {\n      getLogger(this).info('Opening debug menu');\n      getNativeModule(this).openDebugMenu(this._appId);\n    }\n  }\n  interstitial(adUnit) {\n    return new Interstitial(this, adUnit);\n  }\n  rewarded(adUnit) {\n    return new RewardedVideo(this, adUnit);\n  }\n}\nexport const statics = {\n  Banner,\n  NativeExpress,\n  AdRequest,\n  VideoOptions,\n  EventTypes,\n  RewardedVideoEventTypes,\n  NativeExpressEventTypes\n};","map":{"version":3,"names":["SharedEventEmitter","getLogger","getNativeModule","ModuleBase","Interstitial","RewardedVideo","AdRequest","VideoOptions","Banner","NativeExpress","EventTypes","NativeExpressEventTypes","RewardedVideoEventTypes","NATIVE_EVENTS","MODULE_NAME","NAMESPACE","AdMob","constructor","app","events","moduleName","hasMultiAppSupport","hasCustomUrlSupport","namespace","_initialized","_appId","addListener","_onInterstitialEvent","bind","_onRewardedVideoEvent","event","adUnit","jsEventType","listeners","length","emit","initialize","appId","warn","openDebugMenu","info","interstitial","rewarded","statics"],"sources":["/Users/sharusan/MeetMyCar/myapp/node_modules/react-native-firebase/dist/modules/admob/index.js"],"sourcesContent":["/**\n * \n * AdMob representation wrapper\n */\nimport { SharedEventEmitter } from '../../utils/events';\nimport { getLogger } from '../../utils/log';\nimport { getNativeModule } from '../../utils/native';\nimport ModuleBase from '../../utils/ModuleBase';\nimport Interstitial from './Interstitial';\nimport RewardedVideo from './RewardedVideo';\nimport AdRequest from './AdRequest';\nimport VideoOptions from './VideoOptions';\nimport Banner from './Banner';\nimport NativeExpress from './NativeExpress';\nimport EventTypes, { NativeExpressEventTypes, RewardedVideoEventTypes } from './EventTypes';\nconst NATIVE_EVENTS = ['interstitial_event', 'rewarded_video_event'];\nexport const MODULE_NAME = 'RNFirebaseAdMob';\nexport const NAMESPACE = 'admob';\nexport default class AdMob extends ModuleBase {\n  constructor(app) {\n    super(app, {\n      events: NATIVE_EVENTS,\n      moduleName: MODULE_NAME,\n      hasMultiAppSupport: false,\n      hasCustomUrlSupport: false,\n      namespace: NAMESPACE\n    });\n    this._initialized = false;\n    this._appId = null;\n    SharedEventEmitter.addListener('interstitial_event', this._onInterstitialEvent.bind(this));\n    SharedEventEmitter.addListener('rewarded_video_event', this._onRewardedVideoEvent.bind(this));\n  }\n\n  _onInterstitialEvent(event) {\n    const {\n      adUnit\n    } = event;\n    const jsEventType = `interstitial_${adUnit}`;\n\n    if (SharedEventEmitter.listeners(jsEventType).length === 0) {// TODO\n    }\n\n    SharedEventEmitter.emit(jsEventType, event);\n  }\n\n  _onRewardedVideoEvent(event) {\n    const {\n      adUnit\n    } = event;\n    const jsEventType = `rewarded_video_${adUnit}`;\n\n    if (SharedEventEmitter.listeners(jsEventType).length === 0) {// TODO\n    }\n\n    SharedEventEmitter.emit(jsEventType, event);\n  }\n\n  initialize(appId) {\n    if (this._initialized) {\n      getLogger(this).warn('AdMob has already been initialized!');\n    } else {\n      this._initialized = true;\n      this._appId = appId;\n      getNativeModule(this).initialize(appId);\n    }\n  }\n\n  openDebugMenu() {\n    if (!this._initialized) {\n      getLogger(this).warn('AdMob needs to be initialized before opening the dev menu!');\n    } else {\n      getLogger(this).info('Opening debug menu');\n      getNativeModule(this).openDebugMenu(this._appId);\n    }\n  }\n\n  interstitial(adUnit) {\n    return new Interstitial(this, adUnit);\n  }\n\n  rewarded(adUnit) {\n    return new RewardedVideo(this, adUnit);\n  }\n\n}\nexport const statics = {\n  Banner,\n  NativeExpress,\n  AdRequest,\n  VideoOptions,\n  EventTypes,\n  RewardedVideoEventTypes,\n  NativeExpressEventTypes\n};"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}