{"ast":null,"code":"/**\n * \n * DataSnapshot representation wrapper\n */\nimport { isObject, deepGet, deepExists } from '../../utils';\n\n/**\n * @class DataSnapshot\n * @link https://firebase.google.com/docs/reference/js/firebase.database.DataSnapshot\n */\nexport default class DataSnapshot {\n  constructor(ref, snapshot) {\n    this.key = snapshot.key;\n    if (ref.key !== snapshot.key) {\n      this.ref = ref.child(snapshot.key);\n    } else {\n      this.ref = ref;\n    } // internal use only\n\n    this._value = snapshot.value;\n    this._priority = snapshot.priority === undefined ? null : snapshot.priority;\n    this._childKeys = snapshot.childKeys || [];\n  }\n  /**\n   * Extracts a JavaScript value from a DataSnapshot.\n   * @link https://firebase.google.com/docs/reference/js/firebase.database.DataSnapshot#val\n   * @returns {any}\n   */\n\n  val() {\n    // clone via JSON stringify/parse - prevent modification of this._value\n    if (isObject(this._value) || Array.isArray(this._value)) {\n      return JSON.parse(JSON.stringify(this._value));\n    }\n    return this._value;\n  }\n  /**\n   * Exports the entire contents of the DataSnapshot as a JavaScript object.\n   *\n   * The exportVal() method is similar to val(), except priority information is\n   * included (if available), making it suitable for backing up your data.\n   *\n   * @return {{'.value': *, '.priority': *}}\n   */\n\n  exportVal() {\n    let value = this._value;\n    if (isObject(this._value) || Array.isArray(this._value)) {\n      value = JSON.parse(JSON.stringify(this._value));\n    }\n    return {\n      '.value': value,\n      '.priority': this._priority\n    };\n  }\n  /**\n   * Gets another DataSnapshot for the location at the specified relative path.\n   * @param path\n   * @link https://firebase.google.com/docs/reference/js/firebase.database.DataSnapshot#forEach\n   * @returns {Snapshot}\n   */\n\n  child(path) {\n    // TODO validate path is a string\n    let value = deepGet(this._value, path);\n    if (value === undefined) value = null;\n    const childRef = this.ref.child(path);\n    return new DataSnapshot(childRef, {\n      value,\n      key: childRef.key,\n      exists: value !== null,\n      // TODO this is wrong - child keys needs to be the ordered keys, from FB\n      // TODO potential solution is build up a tree/map of a snapshot and its children\n      // TODO natively and send that back to JS to be use in this class.\n      // null check to keep flow happy even though isObject already does this\n      childKeys: isObject(value) && value !== null ? Object.keys(value) : []\n    });\n  }\n  /**\n   * Returns true if this DataSnapshot contains any data.\n   * @link https://firebase.google.com/docs/reference/js/firebase.database.DataSnapshot#exists\n   * @returns {boolean}\n   */\n\n  exists() {\n    return this._value !== null;\n  }\n  /**\n   * Enumerates the top-level children in the DataSnapshot.\n   * @link https://firebase.google.com/docs/reference/js/firebase.database.DataSnapshot#forEach\n   * @param action\n   */\n\n  forEach(action) {\n    if (!this._childKeys.length) return false;\n    let cancelled = false;\n    for (let i = 0, len = this._childKeys.length; i < len; i++) {\n      const key = this._childKeys[i];\n      const childSnapshot = this.child(key);\n      const returnValue = action(childSnapshot);\n      if (returnValue === true) {\n        cancelled = true;\n        break;\n      }\n    }\n    return cancelled;\n  }\n  /**\n   * Gets the priority value of the data in this DataSnapshot.\n   * @link https://firebase.google.com/docs/reference/js/firebase.database.DataSnapshot#getPriority\n   * @returns {String|Number|null}\n   */\n\n  getPriority() {\n    return this._priority;\n  }\n  /**\n   * Returns true if the specified child path has (non-null) data.\n   * @link https://firebase.google.com/docs/reference/js/firebase.database.DataSnapshot#hasChild\n   * @param path\n   * @returns {Boolean}\n   */\n\n  hasChild(path) {\n    return deepExists(this._value, path);\n  }\n  /**\n   * Returns whether or not the DataSnapshot has any non-null child properties.\n   * @link https://firebase.google.com/docs/reference/js/firebase.database.DataSnapshot#hasChildren\n   * @returns {boolean}\n   */\n\n  hasChildren() {\n    return this.numChildren() > 0;\n  }\n  /**\n   * Returns the number of child properties of this DataSnapshot.\n   * @link https://firebase.google.com/docs/reference/js/firebase.database.DataSnapshot#numChildren\n   * @returns {Number}\n   */\n\n  numChildren() {\n    if (!isObject(this._value)) return 0;\n    return Object.keys(this._value).length;\n  }\n  /**\n   * Returns a JSON-serializable representation of this object.\n   * @link https://firebase.google.com/docs/reference/js/firebase.database.DataSnapshot#toJSON\n   * @returns {any}\n   */\n\n  toJSON() {\n    return this.val();\n  }\n}","map":{"version":3,"names":["isObject","deepGet","deepExists","DataSnapshot","constructor","ref","snapshot","key","child","_value","value","_priority","priority","undefined","_childKeys","childKeys","val","Array","isArray","JSON","parse","stringify","exportVal","path","childRef","exists","Object","keys","forEach","action","length","cancelled","i","len","childSnapshot","returnValue","getPriority","hasChild","hasChildren","numChildren","toJSON"],"sources":["/Users/sharusan/MeetMyCar/myapp/node_modules/react-native-firebase/dist/modules/database/DataSnapshot.js"],"sourcesContent":["/**\n * \n * DataSnapshot representation wrapper\n */\nimport { isObject, deepGet, deepExists } from '../../utils';\n\n/**\n * @class DataSnapshot\n * @link https://firebase.google.com/docs/reference/js/firebase.database.DataSnapshot\n */\nexport default class DataSnapshot {\n  constructor(ref, snapshot) {\n    this.key = snapshot.key;\n\n    if (ref.key !== snapshot.key) {\n      this.ref = ref.child(snapshot.key);\n    } else {\n      this.ref = ref;\n    } // internal use only\n\n\n    this._value = snapshot.value;\n    this._priority = snapshot.priority === undefined ? null : snapshot.priority;\n    this._childKeys = snapshot.childKeys || [];\n  }\n  /**\n   * Extracts a JavaScript value from a DataSnapshot.\n   * @link https://firebase.google.com/docs/reference/js/firebase.database.DataSnapshot#val\n   * @returns {any}\n   */\n\n\n  val() {\n    // clone via JSON stringify/parse - prevent modification of this._value\n    if (isObject(this._value) || Array.isArray(this._value)) {\n      return JSON.parse(JSON.stringify(this._value));\n    }\n\n    return this._value;\n  }\n  /**\n   * Exports the entire contents of the DataSnapshot as a JavaScript object.\n   *\n   * The exportVal() method is similar to val(), except priority information is\n   * included (if available), making it suitable for backing up your data.\n   *\n   * @return {{'.value': *, '.priority': *}}\n   */\n\n\n  exportVal() {\n    let value = this._value;\n\n    if (isObject(this._value) || Array.isArray(this._value)) {\n      value = JSON.parse(JSON.stringify(this._value));\n    }\n\n    return {\n      '.value': value,\n      '.priority': this._priority\n    };\n  }\n  /**\n   * Gets another DataSnapshot for the location at the specified relative path.\n   * @param path\n   * @link https://firebase.google.com/docs/reference/js/firebase.database.DataSnapshot#forEach\n   * @returns {Snapshot}\n   */\n\n\n  child(path) {\n    // TODO validate path is a string\n    let value = deepGet(this._value, path);\n    if (value === undefined) value = null;\n    const childRef = this.ref.child(path);\n    return new DataSnapshot(childRef, {\n      value,\n      key: childRef.key,\n      exists: value !== null,\n      // TODO this is wrong - child keys needs to be the ordered keys, from FB\n      // TODO potential solution is build up a tree/map of a snapshot and its children\n      // TODO natively and send that back to JS to be use in this class.\n      // null check to keep flow happy even though isObject already does this\n      childKeys: isObject(value) && value !== null ? Object.keys(value) : []\n    });\n  }\n  /**\n   * Returns true if this DataSnapshot contains any data.\n   * @link https://firebase.google.com/docs/reference/js/firebase.database.DataSnapshot#exists\n   * @returns {boolean}\n   */\n\n\n  exists() {\n    return this._value !== null;\n  }\n  /**\n   * Enumerates the top-level children in the DataSnapshot.\n   * @link https://firebase.google.com/docs/reference/js/firebase.database.DataSnapshot#forEach\n   * @param action\n   */\n\n\n  forEach(action) {\n    if (!this._childKeys.length) return false;\n    let cancelled = false;\n\n    for (let i = 0, len = this._childKeys.length; i < len; i++) {\n      const key = this._childKeys[i];\n      const childSnapshot = this.child(key);\n      const returnValue = action(childSnapshot);\n\n      if (returnValue === true) {\n        cancelled = true;\n        break;\n      }\n    }\n\n    return cancelled;\n  }\n  /**\n   * Gets the priority value of the data in this DataSnapshot.\n   * @link https://firebase.google.com/docs/reference/js/firebase.database.DataSnapshot#getPriority\n   * @returns {String|Number|null}\n   */\n\n\n  getPriority() {\n    return this._priority;\n  }\n  /**\n   * Returns true if the specified child path has (non-null) data.\n   * @link https://firebase.google.com/docs/reference/js/firebase.database.DataSnapshot#hasChild\n   * @param path\n   * @returns {Boolean}\n   */\n\n\n  hasChild(path) {\n    return deepExists(this._value, path);\n  }\n  /**\n   * Returns whether or not the DataSnapshot has any non-null child properties.\n   * @link https://firebase.google.com/docs/reference/js/firebase.database.DataSnapshot#hasChildren\n   * @returns {boolean}\n   */\n\n\n  hasChildren() {\n    return this.numChildren() > 0;\n  }\n  /**\n   * Returns the number of child properties of this DataSnapshot.\n   * @link https://firebase.google.com/docs/reference/js/firebase.database.DataSnapshot#numChildren\n   * @returns {Number}\n   */\n\n\n  numChildren() {\n    if (!isObject(this._value)) return 0;\n    return Object.keys(this._value).length;\n  }\n  /**\n   * Returns a JSON-serializable representation of this object.\n   * @link https://firebase.google.com/docs/reference/js/firebase.database.DataSnapshot#toJSON\n   * @returns {any}\n   */\n\n\n  toJSON() {\n    return this.val();\n  }\n\n}"],"mappings":"AAAA;AACA;AACA;AACA;AACA,SAASA,QAAQ,EAAEC,OAAO,EAAEC,UAAU,QAAQ,aAAa;;AAE3D;AACA;AACA;AACA;AACA,eAAe,MAAMC,YAAY,CAAC;EAChCC,WAAWA,CAACC,GAAG,EAAEC,QAAQ,EAAE;IACzB,IAAI,CAACC,GAAG,GAAGD,QAAQ,CAACC,GAAG;IAEvB,IAAIF,GAAG,CAACE,GAAG,KAAKD,QAAQ,CAACC,GAAG,EAAE;MAC5B,IAAI,CAACF,GAAG,GAAGA,GAAG,CAACG,KAAK,CAACF,QAAQ,CAACC,GAAG,CAAC;IACpC,CAAC,MAAM;MACL,IAAI,CAACF,GAAG,GAAGA,GAAG;IAChB,CAAC,CAAC;;IAGF,IAAI,CAACI,MAAM,GAAGH,QAAQ,CAACI,KAAK;IAC5B,IAAI,CAACC,SAAS,GAAGL,QAAQ,CAACM,QAAQ,KAAKC,SAAS,GAAG,IAAI,GAAGP,QAAQ,CAACM,QAAQ;IAC3E,IAAI,CAACE,UAAU,GAAGR,QAAQ,CAACS,SAAS,IAAI,EAAE;EAC5C;EACA;AACF;AACA;AACA;AACA;;EAGEC,GAAGA,CAAA,EAAG;IACJ;IACA,IAAIhB,QAAQ,CAAC,IAAI,CAACS,MAAM,CAAC,IAAIQ,KAAK,CAACC,OAAO,CAAC,IAAI,CAACT,MAAM,CAAC,EAAE;MACvD,OAAOU,IAAI,CAACC,KAAK,CAACD,IAAI,CAACE,SAAS,CAAC,IAAI,CAACZ,MAAM,CAAC,CAAC;IAChD;IAEA,OAAO,IAAI,CAACA,MAAM;EACpB;EACA;AACF;AACA;AACA;AACA;AACA;AACA;AACA;;EAGEa,SAASA,CAAA,EAAG;IACV,IAAIZ,KAAK,GAAG,IAAI,CAACD,MAAM;IAEvB,IAAIT,QAAQ,CAAC,IAAI,CAACS,MAAM,CAAC,IAAIQ,KAAK,CAACC,OAAO,CAAC,IAAI,CAACT,MAAM,CAAC,EAAE;MACvDC,KAAK,GAAGS,IAAI,CAACC,KAAK,CAACD,IAAI,CAACE,SAAS,CAAC,IAAI,CAACZ,MAAM,CAAC,CAAC;IACjD;IAEA,OAAO;MACL,QAAQ,EAAEC,KAAK;MACf,WAAW,EAAE,IAAI,CAACC;IACpB,CAAC;EACH;EACA;AACF;AACA;AACA;AACA;AACA;;EAGEH,KAAKA,CAACe,IAAI,EAAE;IACV;IACA,IAAIb,KAAK,GAAGT,OAAO,CAAC,IAAI,CAACQ,MAAM,EAAEc,IAAI,CAAC;IACtC,IAAIb,KAAK,KAAKG,SAAS,EAAEH,KAAK,GAAG,IAAI;IACrC,MAAMc,QAAQ,GAAG,IAAI,CAACnB,GAAG,CAACG,KAAK,CAACe,IAAI,CAAC;IACrC,OAAO,IAAIpB,YAAY,CAACqB,QAAQ,EAAE;MAChCd,KAAK;MACLH,GAAG,EAAEiB,QAAQ,CAACjB,GAAG;MACjBkB,MAAM,EAAEf,KAAK,KAAK,IAAI;MACtB;MACA;MACA;MACA;MACAK,SAAS,EAAEf,QAAQ,CAACU,KAAK,CAAC,IAAIA,KAAK,KAAK,IAAI,GAAGgB,MAAM,CAACC,IAAI,CAACjB,KAAK,CAAC,GAAG;IACtE,CAAC,CAAC;EACJ;EACA;AACF;AACA;AACA;AACA;;EAGEe,MAAMA,CAAA,EAAG;IACP,OAAO,IAAI,CAAChB,MAAM,KAAK,IAAI;EAC7B;EACA;AACF;AACA;AACA;AACA;;EAGEmB,OAAOA,CAACC,MAAM,EAAE;IACd,IAAI,CAAC,IAAI,CAACf,UAAU,CAACgB,MAAM,EAAE,OAAO,KAAK;IACzC,IAAIC,SAAS,GAAG,KAAK;IAErB,KAAK,IAAIC,CAAC,GAAG,CAAC,EAAEC,GAAG,GAAG,IAAI,CAACnB,UAAU,CAACgB,MAAM,EAAEE,CAAC,GAAGC,GAAG,EAAED,CAAC,EAAE,EAAE;MAC1D,MAAMzB,GAAG,GAAG,IAAI,CAACO,UAAU,CAACkB,CAAC,CAAC;MAC9B,MAAME,aAAa,GAAG,IAAI,CAAC1B,KAAK,CAACD,GAAG,CAAC;MACrC,MAAM4B,WAAW,GAAGN,MAAM,CAACK,aAAa,CAAC;MAEzC,IAAIC,WAAW,KAAK,IAAI,EAAE;QACxBJ,SAAS,GAAG,IAAI;QAChB;MACF;IACF;IAEA,OAAOA,SAAS;EAClB;EACA;AACF;AACA;AACA;AACA;;EAGEK,WAAWA,CAAA,EAAG;IACZ,OAAO,IAAI,CAACzB,SAAS;EACvB;EACA;AACF;AACA;AACA;AACA;AACA;;EAGE0B,QAAQA,CAACd,IAAI,EAAE;IACb,OAAOrB,UAAU,CAAC,IAAI,CAACO,MAAM,EAAEc,IAAI,CAAC;EACtC;EACA;AACF;AACA;AACA;AACA;;EAGEe,WAAWA,CAAA,EAAG;IACZ,OAAO,IAAI,CAACC,WAAW,CAAC,CAAC,GAAG,CAAC;EAC/B;EACA;AACF;AACA;AACA;AACA;;EAGEA,WAAWA,CAAA,EAAG;IACZ,IAAI,CAACvC,QAAQ,CAAC,IAAI,CAACS,MAAM,CAAC,EAAE,OAAO,CAAC;IACpC,OAAOiB,MAAM,CAACC,IAAI,CAAC,IAAI,CAAClB,MAAM,CAAC,CAACqB,MAAM;EACxC;EACA;AACF;AACA;AACA;AACA;;EAGEU,MAAMA,CAAA,EAAG;IACP,OAAO,IAAI,CAACxB,GAAG,CAAC,CAAC;EACnB;AAEF"},"metadata":{},"sourceType":"module","externalDependencies":[]}