{"ast":null,"code":"/**\n * \n * CollectionReference representation wrapper\n */\nimport Query from './Query';\nimport DocumentReference from './DocumentReference';\nimport { firestoreAutoId } from '../../utils';\n\n/**\n * @class CollectionReference\n */\nexport default class CollectionReference {\n  constructor(firestore, collectionPath) {\n    this._collectionPath = collectionPath;\n    this._firestore = firestore;\n    this._query = new Query(firestore, collectionPath);\n  }\n  get firestore() {\n    return this._firestore;\n  }\n  get id() {\n    return this._collectionPath.id;\n  }\n  get parent() {\n    const parentPath = this._collectionPath.parent();\n    return parentPath ? new DocumentReference(this._firestore, parentPath) : null;\n  }\n  get path() {\n    return this._collectionPath.relativeName;\n  }\n  isEqual(otherCollectionReference) {\n    if (!(otherCollectionReference instanceof CollectionReference)) {\n      throw new Error('firebase.firestore.CollectionReference.isEqual(*) expects an instance of CollectionReference.');\n    } // check paths match\n\n    if (this.path !== otherCollectionReference.path) return false; // check same firestore app name\n\n    if (this._firestore.app.name !== otherCollectionReference._firestore.app.name) {\n      return false;\n    } // check same firestore app projectId\n    // noinspection RedundantIfStatementJS\n\n    if (this._firestore.app.options.projectId !== otherCollectionReference._firestore.app.options.projectId) {\n      return false;\n    }\n    return true;\n  }\n  add(data) {\n    const documentRef = this.doc();\n    return documentRef.set(data).then(() => Promise.resolve(documentRef));\n  }\n  doc(documentPath) {\n    const newPath = documentPath || firestoreAutoId();\n    const path = this._collectionPath.child(newPath);\n    if (!path.isDocument) {\n      throw new Error('Argument \"documentPath\" must point to a document.');\n    }\n    return new DocumentReference(this._firestore, path);\n  } // From Query\n\n  endAt(...snapshotOrVarArgs) {\n    return this._query.endAt(snapshotOrVarArgs);\n  }\n  endBefore(...snapshotOrVarArgs) {\n    return this._query.endBefore(snapshotOrVarArgs);\n  }\n  get(options) {\n    return this._query.get(options);\n  }\n  limit(limit) {\n    return this._query.limit(limit);\n  }\n  onSnapshot(optionsOrObserverOrOnNext, observerOrOnNextOrOnError, onError) {\n    return this._query.onSnapshot(optionsOrObserverOrOnNext, observerOrOnNextOrOnError, onError);\n  }\n  orderBy(fieldPath, directionStr) {\n    return this._query.orderBy(fieldPath, directionStr);\n  }\n  startAfter(...snapshotOrVarArgs) {\n    return this._query.startAfter(snapshotOrVarArgs);\n  }\n  startAt(...snapshotOrVarArgs) {\n    return this._query.startAt(snapshotOrVarArgs);\n  }\n  where(fieldPath, opStr, value) {\n    return this._query.where(fieldPath, opStr, value);\n  }\n}","map":{"version":3,"names":["Query","DocumentReference","firestoreAutoId","CollectionReference","constructor","firestore","collectionPath","_collectionPath","_firestore","_query","id","parent","parentPath","path","relativeName","isEqual","otherCollectionReference","Error","app","name","options","projectId","add","data","documentRef","doc","set","then","Promise","resolve","documentPath","newPath","child","isDocument","endAt","snapshotOrVarArgs","endBefore","get","limit","onSnapshot","optionsOrObserverOrOnNext","observerOrOnNextOrOnError","onError","orderBy","fieldPath","directionStr","startAfter","startAt","where","opStr","value"],"sources":["/Users/sharusan/MeetMyCar/myapp/node_modules/react-native-firebase/dist/modules/firestore/CollectionReference.js"],"sourcesContent":["/**\n * \n * CollectionReference representation wrapper\n */\nimport Query from './Query';\nimport DocumentReference from './DocumentReference';\nimport { firestoreAutoId } from '../../utils';\n\n/**\n * @class CollectionReference\n */\nexport default class CollectionReference {\n  constructor(firestore, collectionPath) {\n    this._collectionPath = collectionPath;\n    this._firestore = firestore;\n    this._query = new Query(firestore, collectionPath);\n  }\n\n  get firestore() {\n    return this._firestore;\n  }\n\n  get id() {\n    return this._collectionPath.id;\n  }\n\n  get parent() {\n    const parentPath = this._collectionPath.parent();\n\n    return parentPath ? new DocumentReference(this._firestore, parentPath) : null;\n  }\n\n  get path() {\n    return this._collectionPath.relativeName;\n  }\n\n  isEqual(otherCollectionReference) {\n    if (!(otherCollectionReference instanceof CollectionReference)) {\n      throw new Error('firebase.firestore.CollectionReference.isEqual(*) expects an instance of CollectionReference.');\n    } // check paths match\n\n\n    if (this.path !== otherCollectionReference.path) return false; // check same firestore app name\n\n    if (this._firestore.app.name !== otherCollectionReference._firestore.app.name) {\n      return false;\n    } // check same firestore app projectId\n    // noinspection RedundantIfStatementJS\n\n\n    if (this._firestore.app.options.projectId !== otherCollectionReference._firestore.app.options.projectId) {\n      return false;\n    }\n\n    return true;\n  }\n\n  add(data) {\n    const documentRef = this.doc();\n    return documentRef.set(data).then(() => Promise.resolve(documentRef));\n  }\n\n  doc(documentPath) {\n    const newPath = documentPath || firestoreAutoId();\n\n    const path = this._collectionPath.child(newPath);\n\n    if (!path.isDocument) {\n      throw new Error('Argument \"documentPath\" must point to a document.');\n    }\n\n    return new DocumentReference(this._firestore, path);\n  } // From Query\n\n\n  endAt(...snapshotOrVarArgs) {\n    return this._query.endAt(snapshotOrVarArgs);\n  }\n\n  endBefore(...snapshotOrVarArgs) {\n    return this._query.endBefore(snapshotOrVarArgs);\n  }\n\n  get(options) {\n    return this._query.get(options);\n  }\n\n  limit(limit) {\n    return this._query.limit(limit);\n  }\n\n  onSnapshot(optionsOrObserverOrOnNext, observerOrOnNextOrOnError, onError) {\n    return this._query.onSnapshot(optionsOrObserverOrOnNext, observerOrOnNextOrOnError, onError);\n  }\n\n  orderBy(fieldPath, directionStr) {\n    return this._query.orderBy(fieldPath, directionStr);\n  }\n\n  startAfter(...snapshotOrVarArgs) {\n    return this._query.startAfter(snapshotOrVarArgs);\n  }\n\n  startAt(...snapshotOrVarArgs) {\n    return this._query.startAt(snapshotOrVarArgs);\n  }\n\n  where(fieldPath, opStr, value) {\n    return this._query.where(fieldPath, opStr, value);\n  }\n\n}"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}