{"ast":null,"code":"var _jsxFileName = \"/Users/sharusan/MeetMyCar/myapp/src/AuthContext.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { useContext, useEffect, useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AuthContext = /*#__PURE__*/React.createContext();\nexport function useAuth() {\n  _s();\n  return useContext(AuthContext);\n}\n_s(useAuth, \"gDsCjeeItUuvgOWf1v4qoK9RF6k=\");\nexport function AuthProvider({\n  children\n}) {\n  _s2();\n  const [currentUser, setCurrentUser] = useState();\n  const [loading, setLoading] = useState(true);\n  async function signup(email, password) {\n    try {\n      const response = await fetch(`http://localhost:3001/firebase/signup`, {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          email,\n          password\n        })\n      });\n      if (!response.ok) {\n        const errorData = await response.json();\n        throw new Error(errorData.message);\n      }\n      const data = await response.json();\n      setCurrentUser(data.user);\n      console.log(\"Signup Success\");\n    } catch (error) {\n      console.error(\"Error signing up:\", error);\n      throw error;\n    }\n  }\n  async function login(email, password) {\n    try {\n      const response = await fetch(`http://localhost:3001/firebase/login`, {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          email,\n          password\n        })\n      });\n      if (!response.ok) {\n        const errorData = await response.json();\n        throw new Error(errorData.message);\n      }\n      const data = await response.json();\n      setCurrentUser(data.user);\n      console.log(\"Login Success\");\n    } catch (error) {\n      console.error(\"Error logging in:\", error);\n      throw error;\n    }\n  }\n  async function logout(erd) {\n    try {\n      const response = await fetch(`http://localhost:3001/firebase/login`, {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          email,\n          password\n        })\n      });\n      if (!response.ok) {\n        const errorData = await response.json();\n        throw new Error(errorData.message);\n      }\n      const data = await response.json();\n      setCurrentUser(data.user);\n      console.log(\"Login Success\");\n    } catch (error) {\n      console.error(\"Error logging in:\", error);\n      throw error;\n    }\n  }\n  function passwordReset(email) {\n    return auth.sendPasswordResetEmail(email);\n  }\n  function updateEmail(email) {\n    return currentUser.verifyBeforeUpdateEmail(email);\n  }\n  function updatePassword(password) {\n    return currentUser.updatePassword(password);\n  }\n  function deleteUser() {\n    return currentUser.delete();\n  }\n  useEffect(() => {\n    const unsubscribe = auth.onAuthStateChanged(user => {\n      setCurrentUser(user);\n      setLoading(false);\n    });\n    return unsubscribe;\n  }, []);\n  const value = {\n    currentUser,\n    signup,\n    login,\n    logout,\n    passwordReset,\n    updateEmail,\n    updatePassword,\n    deleteUser\n  };\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    value: value,\n    children: !loading && children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 127,\n    columnNumber: 5\n  }, this);\n}\n_s2(AuthProvider, \"1cdeWWSmbSz3cOWqWLAt+Ta4DMY=\");\n_c = AuthProvider;\nvar _c;\n$RefreshReg$(_c, \"AuthProvider\");","map":{"version":3,"names":["React","useContext","useEffect","useState","jsxDEV","_jsxDEV","AuthContext","createContext","useAuth","_s","AuthProvider","children","_s2","currentUser","setCurrentUser","loading","setLoading","signup","email","password","response","fetch","method","headers","body","JSON","stringify","ok","errorData","json","Error","message","data","user","console","log","error","login","logout","erd","passwordReset","auth","sendPasswordResetEmail","updateEmail","verifyBeforeUpdateEmail","updatePassword","deleteUser","delete","unsubscribe","onAuthStateChanged","value","Provider","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/sharusan/MeetMyCar/myapp/src/AuthContext.js"],"sourcesContent":["import React, {useContext, useEffect, useState} from 'react'\n\nconst AuthContext = React.createContext()\n\nexport function useAuth() {\n    return useContext(AuthContext)\n}\n\nexport function AuthProvider ({children}) {\n    const [currentUser, setCurrentUser] = useState()\n    const [loading, setLoading] = useState(true)\n\n    async function signup(email, password){\n      try{\n          const response = await fetch(`http://localhost:3001/firebase/signup`, {\n              method: 'POST',\n              headers: {\n                'Content-Type': 'application/json'\n              },\n              body: JSON.stringify({email, password})\n          });\n\n          if (!response.ok){\n            const errorData = await response.json()\n            throw new Error(errorData.message)\n          }\n\n          const data = await response.json()\n          setCurrentUser(data.user)\n          console.log(\"Signup Success\")\n\n      } catch (error){\n          console.error(\"Error signing up:\", error)\n          throw error;\n      }\n    }\n\n    async function login(email, password){\n      try{\n          const response = await fetch(`http://localhost:3001/firebase/login`, {\n              method: 'POST',\n              headers: {\n                'Content-Type': 'application/json'\n              },\n              body: JSON.stringify({email, password})\n          });\n\n          if (!response.ok){\n            const errorData = await response.json()\n            throw new Error(errorData.message)\n          }\n\n          const data = await response.json()\n          setCurrentUser(data.user)\n          console.log(\"Login Success\")\n\n      } catch (error){\n          console.error(\"Error logging in:\", error)\n          throw error;\n      }\n    }\n\n    async function logout(erd){\n      try{\n          const response = await fetch(`http://localhost:3001/firebase/login`, {\n              method: 'POST',\n              headers: {\n                'Content-Type': 'application/json'\n              },\n              body: JSON.stringify({email, password})\n          });\n\n          if (!response.ok){\n            const errorData = await response.json()\n            throw new Error(errorData.message)\n          }\n\n          const data = await response.json()\n          setCurrentUser(data.user)\n          console.log(\"Login Success\")\n\n      } catch (error){\n          console.error(\"Error logging in:\", error)\n          throw error;\n      }\n    }\n    function passwordReset(email){\n      return auth.sendPasswordResetEmail(email)\n    }\n\n    function updateEmail(email){\n      return currentUser.verifyBeforeUpdateEmail(email)\n    }\n\n    function updatePassword(password){\n      return currentUser.updatePassword(password)\n    }\n\n    function deleteUser(){\n      return currentUser.delete()\n    }\n\n    useEffect(() => {\n      const unsubscribe = auth.onAuthStateChanged(user =>{\n        setCurrentUser(user)\n        setLoading(false)\n      })\n\n      return unsubscribe\n    }, [])\n\n   \n\n    const value  = {\n        currentUser,\n        signup,\n        login,\n        logout,\n        passwordReset,\n        updateEmail,\n        updatePassword,\n        deleteUser\n    }\n\n\n  return (\n    <AuthContext.Provider value = {value}>\n      {!loading && children}\n    </AuthContext.Provider>\n  )\n}"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}