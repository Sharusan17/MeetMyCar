{"ast":null,"code":"/**\n * \n * Notification representation wrapper\n */\nimport { Platform } from 'react-native';\nimport AndroidNotification from './AndroidNotification';\nimport IOSNotification from './IOSNotification';\nimport { generatePushID, isObject } from '../../utils';\nexport default class Notification {\n  // iOS 8/9 | 10+ | Android\n  // alertBody | body | contentText\n  // userInfo | userInfo | extras\n  // soundName | sound | sound\n  // N/A | subtitle | subText\n  // alertTitle | title | contentTitle\n  constructor(nativeNotification, notifications) {\n    if (nativeNotification) {\n      this._body = nativeNotification.body;\n      this._data = nativeNotification.data;\n      this._notificationId = nativeNotification.notificationId;\n      this._sound = nativeNotification.sound;\n      this._subtitle = nativeNotification.subtitle;\n      this._title = nativeNotification.title;\n    }\n    this._android = new AndroidNotification(this, nativeNotification && nativeNotification.android);\n    this._ios = new IOSNotification(this, notifications, nativeNotification && nativeNotification.ios); // Defaults\n\n    this._data = this._data || {}; // TODO: Is this the best way to generate an ID?\n\n    this._notificationId = this._notificationId || generatePushID();\n  }\n  get android() {\n    return this._android;\n  }\n  get body() {\n    return this._body;\n  }\n  get data() {\n    return this._data;\n  }\n  get ios() {\n    return this._ios;\n  }\n  get notificationId() {\n    return this._notificationId;\n  }\n  get sound() {\n    return this._sound;\n  }\n  get subtitle() {\n    return this._subtitle;\n  }\n  get title() {\n    return this._title;\n  }\n  /**\n   *\n   * @param body\n   * @returns {Notification}\n   */\n\n  setBody(body) {\n    this._body = body;\n    return this;\n  }\n  /**\n   *\n   * @param data\n   * @returns {Notification}\n   */\n\n  setData(data = {}) {\n    if (!isObject(data)) {\n      throw new Error(`Notification:withData expects an object but got type '${typeof data}'.`);\n    }\n    this._data = data;\n    return this;\n  }\n  /**\n   *\n   * @param notificationId\n   * @returns {Notification}\n   */\n\n  setNotificationId(notificationId) {\n    this._notificationId = notificationId;\n    return this;\n  }\n  /**\n   *\n   * @param sound\n   * @returns {Notification}\n   */\n\n  setSound(sound) {\n    this._sound = sound;\n    return this;\n  }\n  /**\n   *\n   * @param subtitle\n   * @returns {Notification}\n   */\n\n  setSubtitle(subtitle) {\n    this._subtitle = subtitle;\n    return this;\n  }\n  /**\n   *\n   * @param title\n   * @returns {Notification}\n   */\n\n  setTitle(title) {\n    this._title = title;\n    return this;\n  }\n  build() {\n    if (!this._notificationId) {\n      throw new Error('Notification: Missing required `notificationId` property');\n    }\n    return {\n      android: Platform.OS === 'android' ? this._android.build() : undefined,\n      body: this._body,\n      data: this._data,\n      ios: Platform.OS === 'ios' ? this._ios.build() : undefined,\n      notificationId: this._notificationId,\n      sound: this._sound,\n      subtitle: this._subtitle,\n      title: this._title\n    };\n  }\n}","map":{"version":3,"names":["Platform","AndroidNotification","IOSNotification","generatePushID","isObject","Notification","constructor","nativeNotification","notifications","_body","body","_data","data","_notificationId","notificationId","_sound","sound","_subtitle","subtitle","_title","title","_android","android","_ios","ios","setBody","setData","Error","setNotificationId","setSound","setSubtitle","setTitle","build","OS","undefined"],"sources":["/Users/sharusan/MeetMyCar/myapp/node_modules/react-native-firebase/dist/modules/notifications/Notification.js"],"sourcesContent":["/**\n * \n * Notification representation wrapper\n */\nimport { Platform } from 'react-native';\nimport AndroidNotification from './AndroidNotification';\nimport IOSNotification from './IOSNotification';\nimport { generatePushID, isObject } from '../../utils';\nexport default class Notification {\n  // iOS 8/9 | 10+ | Android\n  // alertBody | body | contentText\n  // userInfo | userInfo | extras\n  // soundName | sound | sound\n  // N/A | subtitle | subText\n  // alertTitle | title | contentTitle\n  constructor(nativeNotification, notifications) {\n    if (nativeNotification) {\n      this._body = nativeNotification.body;\n      this._data = nativeNotification.data;\n      this._notificationId = nativeNotification.notificationId;\n      this._sound = nativeNotification.sound;\n      this._subtitle = nativeNotification.subtitle;\n      this._title = nativeNotification.title;\n    }\n\n    this._android = new AndroidNotification(this, nativeNotification && nativeNotification.android);\n    this._ios = new IOSNotification(this, notifications, nativeNotification && nativeNotification.ios); // Defaults\n\n    this._data = this._data || {}; // TODO: Is this the best way to generate an ID?\n\n    this._notificationId = this._notificationId || generatePushID();\n  }\n\n  get android() {\n    return this._android;\n  }\n\n  get body() {\n    return this._body;\n  }\n\n  get data() {\n    return this._data;\n  }\n\n  get ios() {\n    return this._ios;\n  }\n\n  get notificationId() {\n    return this._notificationId;\n  }\n\n  get sound() {\n    return this._sound;\n  }\n\n  get subtitle() {\n    return this._subtitle;\n  }\n\n  get title() {\n    return this._title;\n  }\n  /**\n   *\n   * @param body\n   * @returns {Notification}\n   */\n\n\n  setBody(body) {\n    this._body = body;\n    return this;\n  }\n  /**\n   *\n   * @param data\n   * @returns {Notification}\n   */\n\n\n  setData(data = {}) {\n    if (!isObject(data)) {\n      throw new Error(`Notification:withData expects an object but got type '${typeof data}'.`);\n    }\n\n    this._data = data;\n    return this;\n  }\n  /**\n   *\n   * @param notificationId\n   * @returns {Notification}\n   */\n\n\n  setNotificationId(notificationId) {\n    this._notificationId = notificationId;\n    return this;\n  }\n  /**\n   *\n   * @param sound\n   * @returns {Notification}\n   */\n\n\n  setSound(sound) {\n    this._sound = sound;\n    return this;\n  }\n  /**\n   *\n   * @param subtitle\n   * @returns {Notification}\n   */\n\n\n  setSubtitle(subtitle) {\n    this._subtitle = subtitle;\n    return this;\n  }\n  /**\n   *\n   * @param title\n   * @returns {Notification}\n   */\n\n\n  setTitle(title) {\n    this._title = title;\n    return this;\n  }\n\n  build() {\n    if (!this._notificationId) {\n      throw new Error('Notification: Missing required `notificationId` property');\n    }\n\n    return {\n      android: Platform.OS === 'android' ? this._android.build() : undefined,\n      body: this._body,\n      data: this._data,\n      ios: Platform.OS === 'ios' ? this._ios.build() : undefined,\n      notificationId: this._notificationId,\n      sound: this._sound,\n      subtitle: this._subtitle,\n      title: this._title\n    };\n  }\n\n}"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}