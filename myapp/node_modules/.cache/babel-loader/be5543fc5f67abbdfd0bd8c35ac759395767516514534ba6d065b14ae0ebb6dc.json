{"ast":null,"code":"import Base64 from '../../utils/Base64';\nexport default class Blob {\n  constructor(binaryString) {\n    this._binaryString = binaryString;\n  }\n  /**\n   * Creates a new Blob from the given Base64 string\n   *\n   * @url https://firebase.google.com/docs/reference/js/firebase.firestore.Blob#.fromBase64String\n   * @param base64 string\n   */\n\n  static fromBase64String(base64) {\n    if (typeof base64 !== 'string' || base64.length < 1) {\n      throw new Error('firestore.Blob.fromBase64String expects a string of at least 1 character in length');\n    }\n    return new Blob(Base64.atob(base64));\n  }\n  /**\n   * Creates a new Blob from the given Uint8Array.\n   *\n   * @url https://firebase.google.com/docs/reference/js/firebase.firestore.Blob#.fromUint8Array\n   * @param array Array\n   */\n\n  static fromUint8Array(array) {\n    if (!(array instanceof Uint8Array)) {\n      throw new Error('firestore.Blob.fromUint8Array expects an instance of Uint8Array');\n    }\n    return new Blob(Array.prototype.map.call(array, char => String.fromCharCode(char)).join(''));\n  }\n  /**\n   * Returns 'true' if this Blob is equal to the provided one.\n   * @url https://firebase.google.com/docs/reference/js/firebase.firestore.Blob#isEqual\n   * @param {*} blob Blob The Blob to compare against. Value must not be null.\n   * @returns boolean 'true' if this Blob is equal to the provided one.\n   */\n\n  isEqual(blob) {\n    if (!(blob instanceof Blob)) {\n      throw new Error('firestore.Blob.isEqual expects an instance of Blob');\n    }\n    return this._binaryString === blob._binaryString;\n  }\n  /**\n   * Returns the bytes of a Blob as a Base64-encoded string.\n   *\n   * @url https://firebase.google.com/docs/reference/js/firebase.firestore.Blob#toBase64\n   * @returns string The Base64-encoded string created from the Blob object.\n   */\n\n  toBase64() {\n    return Base64.btoa(this._binaryString);\n  }\n  /**\n   * Returns the bytes of a Blob in a new Uint8Array.\n   *\n   * @url https://firebase.google.com/docs/reference/js/firebase.firestore.Blob#toUint8Array\n   * @returns non-null Uint8Array The Uint8Array created from the Blob object.\n   */\n\n  toUint8Array() {\n    return new Uint8Array(this._binaryString.split('').map(c => c.charCodeAt(0)));\n  }\n  /**\n   * Returns a string representation of this blob instance\n   *\n   * @returns {string}\n   * @memberof Blob\n   */\n\n  toString() {\n    return `firestore.Blob(base64: ${this.toBase64()})`;\n  }\n}","map":{"version":3,"names":["Base64","Blob","constructor","binaryString","_binaryString","fromBase64String","base64","length","Error","atob","fromUint8Array","array","Uint8Array","Array","prototype","map","call","char","String","fromCharCode","join","isEqual","blob","toBase64","btoa","toUint8Array","split","c","charCodeAt","toString"],"sources":["/Users/sharusan/MeetMyCar/myapp/node_modules/react-native-firebase/dist/modules/firestore/Blob.js"],"sourcesContent":["import Base64 from '../../utils/Base64';\nexport default class Blob {\n  constructor(binaryString) {\n    this._binaryString = binaryString;\n  }\n  /**\n   * Creates a new Blob from the given Base64 string\n   *\n   * @url https://firebase.google.com/docs/reference/js/firebase.firestore.Blob#.fromBase64String\n   * @param base64 string\n   */\n\n\n  static fromBase64String(base64) {\n    if (typeof base64 !== 'string' || base64.length < 1) {\n      throw new Error('firestore.Blob.fromBase64String expects a string of at least 1 character in length');\n    }\n\n    return new Blob(Base64.atob(base64));\n  }\n  /**\n   * Creates a new Blob from the given Uint8Array.\n   *\n   * @url https://firebase.google.com/docs/reference/js/firebase.firestore.Blob#.fromUint8Array\n   * @param array Array\n   */\n\n\n  static fromUint8Array(array) {\n    if (!(array instanceof Uint8Array)) {\n      throw new Error('firestore.Blob.fromUint8Array expects an instance of Uint8Array');\n    }\n\n    return new Blob(Array.prototype.map.call(array, char => String.fromCharCode(char)).join(''));\n  }\n  /**\n   * Returns 'true' if this Blob is equal to the provided one.\n   * @url https://firebase.google.com/docs/reference/js/firebase.firestore.Blob#isEqual\n   * @param {*} blob Blob The Blob to compare against. Value must not be null.\n   * @returns boolean 'true' if this Blob is equal to the provided one.\n   */\n\n\n  isEqual(blob) {\n    if (!(blob instanceof Blob)) {\n      throw new Error('firestore.Blob.isEqual expects an instance of Blob');\n    }\n\n    return this._binaryString === blob._binaryString;\n  }\n  /**\n   * Returns the bytes of a Blob as a Base64-encoded string.\n   *\n   * @url https://firebase.google.com/docs/reference/js/firebase.firestore.Blob#toBase64\n   * @returns string The Base64-encoded string created from the Blob object.\n   */\n\n\n  toBase64() {\n    return Base64.btoa(this._binaryString);\n  }\n  /**\n   * Returns the bytes of a Blob in a new Uint8Array.\n   *\n   * @url https://firebase.google.com/docs/reference/js/firebase.firestore.Blob#toUint8Array\n   * @returns non-null Uint8Array The Uint8Array created from the Blob object.\n   */\n\n\n  toUint8Array() {\n    return new Uint8Array(this._binaryString.split('').map(c => c.charCodeAt(0)));\n  }\n  /**\n   * Returns a string representation of this blob instance\n   *\n   * @returns {string}\n   * @memberof Blob\n   */\n\n\n  toString() {\n    return `firestore.Blob(base64: ${this.toBase64()})`;\n  }\n\n}"],"mappings":"AAAA,OAAOA,MAAM,MAAM,oBAAoB;AACvC,eAAe,MAAMC,IAAI,CAAC;EACxBC,WAAWA,CAACC,YAAY,EAAE;IACxB,IAAI,CAACC,aAAa,GAAGD,YAAY;EACnC;EACA;AACF;AACA;AACA;AACA;AACA;;EAGE,OAAOE,gBAAgBA,CAACC,MAAM,EAAE;IAC9B,IAAI,OAAOA,MAAM,KAAK,QAAQ,IAAIA,MAAM,CAACC,MAAM,GAAG,CAAC,EAAE;MACnD,MAAM,IAAIC,KAAK,CAAC,oFAAoF,CAAC;IACvG;IAEA,OAAO,IAAIP,IAAI,CAACD,MAAM,CAACS,IAAI,CAACH,MAAM,CAAC,CAAC;EACtC;EACA;AACF;AACA;AACA;AACA;AACA;;EAGE,OAAOI,cAAcA,CAACC,KAAK,EAAE;IAC3B,IAAI,EAAEA,KAAK,YAAYC,UAAU,CAAC,EAAE;MAClC,MAAM,IAAIJ,KAAK,CAAC,iEAAiE,CAAC;IACpF;IAEA,OAAO,IAAIP,IAAI,CAACY,KAAK,CAACC,SAAS,CAACC,GAAG,CAACC,IAAI,CAACL,KAAK,EAAEM,IAAI,IAAIC,MAAM,CAACC,YAAY,CAACF,IAAI,CAAC,CAAC,CAACG,IAAI,CAAC,EAAE,CAAC,CAAC;EAC9F;EACA;AACF;AACA;AACA;AACA;AACA;;EAGEC,OAAOA,CAACC,IAAI,EAAE;IACZ,IAAI,EAAEA,IAAI,YAAYrB,IAAI,CAAC,EAAE;MAC3B,MAAM,IAAIO,KAAK,CAAC,oDAAoD,CAAC;IACvE;IAEA,OAAO,IAAI,CAACJ,aAAa,KAAKkB,IAAI,CAAClB,aAAa;EAClD;EACA;AACF;AACA;AACA;AACA;AACA;;EAGEmB,QAAQA,CAAA,EAAG;IACT,OAAOvB,MAAM,CAACwB,IAAI,CAAC,IAAI,CAACpB,aAAa,CAAC;EACxC;EACA;AACF;AACA;AACA;AACA;AACA;;EAGEqB,YAAYA,CAAA,EAAG;IACb,OAAO,IAAIb,UAAU,CAAC,IAAI,CAACR,aAAa,CAACsB,KAAK,CAAC,EAAE,CAAC,CAACX,GAAG,CAACY,CAAC,IAAIA,CAAC,CAACC,UAAU,CAAC,CAAC,CAAC,CAAC,CAAC;EAC/E;EACA;AACF;AACA;AACA;AACA;AACA;;EAGEC,QAAQA,CAAA,EAAG;IACT,OAAQ,0BAAyB,IAAI,CAACN,QAAQ,CAAC,CAAE,GAAE;EACrD;AAEF"},"metadata":{},"sourceType":"module","externalDependencies":[]}