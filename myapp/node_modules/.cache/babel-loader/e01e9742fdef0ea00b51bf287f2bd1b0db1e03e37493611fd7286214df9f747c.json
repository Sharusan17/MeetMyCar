{"ast":null,"code":"import { initialiseLogger, getLogger } from './log';\nimport { initialiseNativeModule } from './native';\nexport default class ModuleBase {\n  /**\n   *\n   * @param app\n   * @param config\n   * @param customUrlOrRegion\n   */\n  constructor(app, config, customUrlOrRegion) {\n    if (!config.moduleName) {\n      throw new Error('Missing module name');\n    }\n    if (!config.namespace) {\n      throw new Error('Missing namespace');\n    }\n    const {\n      moduleName\n    } = config;\n    this._app = app;\n    this._customUrlOrRegion = customUrlOrRegion;\n    this.namespace = config.namespace; // check if native module exists as all native\n\n    initialiseNativeModule(this, config, customUrlOrRegion);\n    initialiseLogger(this, `${app.name}:${moduleName.replace('RNFirebase', '')}`);\n  }\n  /**\n   * Returns the App instance for current module\n   * @return {*}\n   */\n\n  get app() {\n    return this._app;\n  }\n  get log() {\n    return getLogger(this);\n  }\n}","map":{"version":3,"names":["initialiseLogger","getLogger","initialiseNativeModule","ModuleBase","constructor","app","config","customUrlOrRegion","moduleName","Error","namespace","_app","_customUrlOrRegion","name","replace","log"],"sources":["/Users/sharusan/MeetMyCar/myapp/node_modules/react-native-firebase/dist/utils/ModuleBase.js"],"sourcesContent":["import { initialiseLogger, getLogger } from './log';\nimport { initialiseNativeModule } from './native';\nexport default class ModuleBase {\n  /**\n   *\n   * @param app\n   * @param config\n   * @param customUrlOrRegion\n   */\n  constructor(app, config, customUrlOrRegion) {\n    if (!config.moduleName) {\n      throw new Error('Missing module name');\n    }\n\n    if (!config.namespace) {\n      throw new Error('Missing namespace');\n    }\n\n    const {\n      moduleName\n    } = config;\n    this._app = app;\n    this._customUrlOrRegion = customUrlOrRegion;\n    this.namespace = config.namespace; // check if native module exists as all native\n\n    initialiseNativeModule(this, config, customUrlOrRegion);\n    initialiseLogger(this, `${app.name}:${moduleName.replace('RNFirebase', '')}`);\n  }\n  /**\n   * Returns the App instance for current module\n   * @return {*}\n   */\n\n\n  get app() {\n    return this._app;\n  }\n\n  get log() {\n    return getLogger(this);\n  }\n\n}"],"mappings":"AAAA,SAASA,gBAAgB,EAAEC,SAAS,QAAQ,OAAO;AACnD,SAASC,sBAAsB,QAAQ,UAAU;AACjD,eAAe,MAAMC,UAAU,CAAC;EAC9B;AACF;AACA;AACA;AACA;AACA;EACEC,WAAWA,CAACC,GAAG,EAAEC,MAAM,EAAEC,iBAAiB,EAAE;IAC1C,IAAI,CAACD,MAAM,CAACE,UAAU,EAAE;MACtB,MAAM,IAAIC,KAAK,CAAC,qBAAqB,CAAC;IACxC;IAEA,IAAI,CAACH,MAAM,CAACI,SAAS,EAAE;MACrB,MAAM,IAAID,KAAK,CAAC,mBAAmB,CAAC;IACtC;IAEA,MAAM;MACJD;IACF,CAAC,GAAGF,MAAM;IACV,IAAI,CAACK,IAAI,GAAGN,GAAG;IACf,IAAI,CAACO,kBAAkB,GAAGL,iBAAiB;IAC3C,IAAI,CAACG,SAAS,GAAGJ,MAAM,CAACI,SAAS,CAAC,CAAC;;IAEnCR,sBAAsB,CAAC,IAAI,EAAEI,MAAM,EAAEC,iBAAiB,CAAC;IACvDP,gBAAgB,CAAC,IAAI,EAAG,GAAEK,GAAG,CAACQ,IAAK,IAAGL,UAAU,CAACM,OAAO,CAAC,YAAY,EAAE,EAAE,CAAE,EAAC,CAAC;EAC/E;EACA;AACF;AACA;AACA;;EAGE,IAAIT,GAAGA,CAAA,EAAG;IACR,OAAO,IAAI,CAACM,IAAI;EAClB;EAEA,IAAII,GAAGA,CAAA,EAAG;IACR,OAAOd,SAAS,CAAC,IAAI,CAAC;EACxB;AAEF"},"metadata":{},"sourceType":"module","externalDependencies":[]}