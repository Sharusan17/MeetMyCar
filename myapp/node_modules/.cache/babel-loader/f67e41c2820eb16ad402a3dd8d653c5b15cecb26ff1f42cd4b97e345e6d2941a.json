{"ast":null,"code":"/**\n * \n * IOSNotification representation wrapper\n */\nimport { isIOS } from '../../utils';\nimport { getLogger } from '../../utils/log';\nimport { getNativeModule } from '../../utils/native';\nexport default class IOSNotification {\n  constructor(notification, notifications, data) {\n    this._notification = notification;\n    if (data) {\n      this._alertAction = data.alertAction;\n      this._attachments = data.attachments || [];\n      this._badge = data.badge;\n      this._category = data.category;\n      this._hasAction = data.hasAction;\n      this._launchImage = data.launchImage;\n      this._threadIdentifier = data.threadIdentifier;\n    } else {\n      this._attachments = [];\n    }\n    if (!isIOS || !notifications || !notifications.ios) {\n      return this;\n    } // IOS + Native Notification Only\n\n    const complete = fetchResult => {\n      const {\n        notificationId\n      } = notification; // && notifications check for Flow\n\n      if (notificationId && notifications) {\n        getLogger(notifications).debug(`Completion handler called for notificationId=${notificationId}`);\n        getNativeModule(notifications).complete(notificationId, fetchResult);\n      }\n    };\n    if (notifications.ios.shouldAutoComplete) {\n      complete(notifications.ios.backgroundFetchResult.noData);\n    } else {\n      this._complete = complete;\n    }\n  }\n  get alertAction() {\n    return this._alertAction;\n  }\n  get attachments() {\n    return this._attachments;\n  }\n  get badge() {\n    return this._badge;\n  }\n  get category() {\n    return this._category;\n  }\n  get hasAction() {\n    return this._hasAction;\n  }\n  get launchImage() {\n    return this._launchImage;\n  }\n  get threadIdentifier() {\n    return this._threadIdentifier;\n  }\n  get complete() {\n    return this._complete;\n  }\n  /**\n   *\n   * @param identifier\n   * @param url\n   * @param options\n   * @returns {Notification}\n   */\n\n  addAttachment(identifier, url, options) {\n    this._attachments.push({\n      identifier,\n      options,\n      url\n    });\n    return this._notification;\n  }\n  /**\n   *\n   * @param alertAction\n   * @returns {Notification}\n   */\n\n  setAlertAction(alertAction) {\n    this._alertAction = alertAction;\n    return this._notification;\n  }\n  /**\n   *\n   * @param badge\n   * @returns {Notification}\n   */\n\n  setBadge(badge) {\n    this._badge = badge;\n    return this._notification;\n  }\n  /**\n   *\n   * @param category\n   * @returns {Notification}\n   */\n\n  setCategory(category) {\n    this._category = category;\n    return this._notification;\n  }\n  /**\n   *\n   * @param hasAction\n   * @returns {Notification}\n   */\n\n  setHasAction(hasAction) {\n    this._hasAction = hasAction;\n    return this._notification;\n  }\n  /**\n   *\n   * @param launchImage\n   * @returns {Notification}\n   */\n\n  setLaunchImage(launchImage) {\n    this._launchImage = launchImage;\n    return this._notification;\n  }\n  /**\n   *\n   * @param threadIdentifier\n   * @returns {Notification}\n   */\n\n  setThreadIdentifier(threadIdentifier) {\n    this._threadIdentifier = threadIdentifier;\n    return this._notification;\n  }\n  build() {\n    // TODO: Validation of required fields\n    return {\n      alertAction: this._alertAction,\n      attachments: this._attachments,\n      badge: this._badge,\n      category: this._category,\n      hasAction: this._hasAction,\n      launchImage: this._launchImage,\n      threadIdentifier: this._threadIdentifier\n    };\n  }\n}","map":{"version":3,"names":["isIOS","getLogger","getNativeModule","IOSNotification","constructor","notification","notifications","data","_notification","_alertAction","alertAction","_attachments","attachments","_badge","badge","_category","category","_hasAction","hasAction","_launchImage","launchImage","_threadIdentifier","threadIdentifier","ios","complete","fetchResult","notificationId","debug","shouldAutoComplete","backgroundFetchResult","noData","_complete","addAttachment","identifier","url","options","push","setAlertAction","setBadge","setCategory","setHasAction","setLaunchImage","setThreadIdentifier","build"],"sources":["/Users/sharusan/MeetMyCar/myapp/node_modules/react-native-firebase/dist/modules/notifications/IOSNotification.js"],"sourcesContent":["/**\n * \n * IOSNotification representation wrapper\n */\nimport { isIOS } from '../../utils';\nimport { getLogger } from '../../utils/log';\nimport { getNativeModule } from '../../utils/native';\nexport default class IOSNotification {\n  constructor(notification, notifications, data) {\n    this._notification = notification;\n\n    if (data) {\n      this._alertAction = data.alertAction;\n      this._attachments = data.attachments || [];\n      this._badge = data.badge;\n      this._category = data.category;\n      this._hasAction = data.hasAction;\n      this._launchImage = data.launchImage;\n      this._threadIdentifier = data.threadIdentifier;\n    } else {\n      this._attachments = [];\n    }\n\n    if (!isIOS || !notifications || !notifications.ios) {\n      return this;\n    } // IOS + Native Notification Only\n\n\n    const complete = fetchResult => {\n      const {\n        notificationId\n      } = notification; // && notifications check for Flow\n\n      if (notificationId && notifications) {\n        getLogger(notifications).debug(`Completion handler called for notificationId=${notificationId}`);\n        getNativeModule(notifications).complete(notificationId, fetchResult);\n      }\n    };\n\n    if (notifications.ios.shouldAutoComplete) {\n      complete(notifications.ios.backgroundFetchResult.noData);\n    } else {\n      this._complete = complete;\n    }\n  }\n\n  get alertAction() {\n    return this._alertAction;\n  }\n\n  get attachments() {\n    return this._attachments;\n  }\n\n  get badge() {\n    return this._badge;\n  }\n\n  get category() {\n    return this._category;\n  }\n\n  get hasAction() {\n    return this._hasAction;\n  }\n\n  get launchImage() {\n    return this._launchImage;\n  }\n\n  get threadIdentifier() {\n    return this._threadIdentifier;\n  }\n\n  get complete() {\n    return this._complete;\n  }\n  /**\n   *\n   * @param identifier\n   * @param url\n   * @param options\n   * @returns {Notification}\n   */\n\n\n  addAttachment(identifier, url, options) {\n    this._attachments.push({\n      identifier,\n      options,\n      url\n    });\n\n    return this._notification;\n  }\n  /**\n   *\n   * @param alertAction\n   * @returns {Notification}\n   */\n\n\n  setAlertAction(alertAction) {\n    this._alertAction = alertAction;\n    return this._notification;\n  }\n  /**\n   *\n   * @param badge\n   * @returns {Notification}\n   */\n\n\n  setBadge(badge) {\n    this._badge = badge;\n    return this._notification;\n  }\n  /**\n   *\n   * @param category\n   * @returns {Notification}\n   */\n\n\n  setCategory(category) {\n    this._category = category;\n    return this._notification;\n  }\n  /**\n   *\n   * @param hasAction\n   * @returns {Notification}\n   */\n\n\n  setHasAction(hasAction) {\n    this._hasAction = hasAction;\n    return this._notification;\n  }\n  /**\n   *\n   * @param launchImage\n   * @returns {Notification}\n   */\n\n\n  setLaunchImage(launchImage) {\n    this._launchImage = launchImage;\n    return this._notification;\n  }\n  /**\n   *\n   * @param threadIdentifier\n   * @returns {Notification}\n   */\n\n\n  setThreadIdentifier(threadIdentifier) {\n    this._threadIdentifier = threadIdentifier;\n    return this._notification;\n  }\n\n  build() {\n    // TODO: Validation of required fields\n    return {\n      alertAction: this._alertAction,\n      attachments: this._attachments,\n      badge: this._badge,\n      category: this._category,\n      hasAction: this._hasAction,\n      launchImage: this._launchImage,\n      threadIdentifier: this._threadIdentifier\n    };\n  }\n\n}"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}