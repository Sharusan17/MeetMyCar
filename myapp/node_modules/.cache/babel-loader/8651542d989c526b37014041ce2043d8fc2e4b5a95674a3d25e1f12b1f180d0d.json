{"ast":null,"code":"// import React, {useContext, useEffect, useState} from 'react'\n// import {auth} from './firebase'\n\n// const AuthContext = React.createContext()\n\n// export function useAuth() {\n//     return useContext(AuthContext)\n// }\n\n// export function AuthProvider ({children}) {\n//     const [currentUser, setCurrentUser] = useState()\n//     const [loading, setLoading] = useState(true)\n\n//     function signup(email, password){\n//       return auth.createUserWithEmailAndPassword(email, password)\n//     }\n\n//     function login(email, password){\n//       return auth.signInWithEmailAndPassword(email, password)\n//     }\n\n//     function logout(){\n//       return auth.signOut()\n//     }\n\n//     function passwordReset(email){\n//       return auth.sendPasswordResetEmail(email)\n//     }\n\n//     function updateEmail(email){\n//       return currentUser.verifyBeforeUpdateEmail(email)\n//     }\n\n//     function updatePassword(password){\n//       return currentUser.updatePassword(password)\n//     }\n\n//     function deleteUser(){\n//       return currentUser.delete()\n//     }\n\n//     useEffect(() => {\n//       const unsubscribe = auth.onAuthStateChanged(user =>{\n//         setCurrentUser(user)\n//         setLoading(false)\n//       })\n\n//       return unsubscribe\n//     }, [])\n\n//     const value  = {\n//         currentUser,\n//         signup,\n//         login,\n//         logout,\n//         passwordReset,\n//         updateEmail,\n//         updatePassword,\n//         deleteUser\n//     }\n\n//   return (\n//     <AuthContext.Provider value = {value}>\n//       {!loading && children}\n//     </AuthContext.Provider>\n//   )\n// }","map":{"version":3,"names":[],"sources":["/Users/sharusan/MeetMyCar/myapp/src/AuthContext.js"],"sourcesContent":["// import React, {useContext, useEffect, useState} from 'react'\n// import {auth} from './firebase'\n\n// const AuthContext = React.createContext()\n\n// export function useAuth() {\n//     return useContext(AuthContext)\n// }\n\n// export function AuthProvider ({children}) {\n//     const [currentUser, setCurrentUser] = useState()\n//     const [loading, setLoading] = useState(true)\n\n//     function signup(email, password){\n//       return auth.createUserWithEmailAndPassword(email, password)\n//     }\n\n//     function login(email, password){\n//       return auth.signInWithEmailAndPassword(email, password)\n//     }\n\n//     function logout(){\n//       return auth.signOut()\n//     }\n\n//     function passwordReset(email){\n//       return auth.sendPasswordResetEmail(email)\n//     }\n\n//     function updateEmail(email){\n//       return currentUser.verifyBeforeUpdateEmail(email)\n//     }\n\n//     function updatePassword(password){\n//       return currentUser.updatePassword(password)\n//     }\n\n//     function deleteUser(){\n//       return currentUser.delete()\n//     }\n\n//     useEffect(() => {\n//       const unsubscribe = auth.onAuthStateChanged(user =>{\n//         setCurrentUser(user)\n//         setLoading(false)\n//       })\n\n//       return unsubscribe\n//     }, [])\n\n   \n\n//     const value  = {\n//         currentUser,\n//         signup,\n//         login,\n//         logout,\n//         passwordReset,\n//         updateEmail,\n//         updatePassword,\n//         deleteUser\n//     }\n\n\n//   return (\n//     <AuthContext.Provider value = {value}>\n//       {!loading && children}\n//     </AuthContext.Provider>\n//   )\n// }"],"mappings":"AAAA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAGA;AACA;AACA;AACA;AACA;AACA"},"metadata":{},"sourceType":"module","externalDependencies":[]}