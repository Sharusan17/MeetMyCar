{"ast":null,"code":"import { statics } from './';\nimport AdRequest from './AdRequest';\nimport { SharedEventEmitter } from '../../utils/events';\nimport { getNativeModule } from '../../utils/native';\nimport { nativeToJSError } from '../../utils';\nlet subscriptions = [];\nexport default class RewardedVideo {\n  constructor(admob, adUnit) {\n    for (let i = 0, len = subscriptions.length; i < len; i++) {\n      subscriptions[i].remove();\n    }\n    subscriptions = [];\n    this._admob = admob;\n    this.adUnit = adUnit;\n    this.loaded = false;\n    SharedEventEmitter.removeAllListeners(`rewarded_video_${adUnit}`);\n    SharedEventEmitter.addListener(`rewarded_video_${adUnit}`, this._onRewardedVideoEvent);\n  }\n  /**\n   * Handle a JS emit event\n   * @param event\n   * @private\n   */\n\n  _onRewardedVideoEvent = event => {\n    const eventType = `rewarded_video:${this.adUnit}:${event.type}`;\n    let emitData = Object.assign({}, event);\n    switch (event.type) {\n      case 'onAdLoaded':\n        this.loaded = true;\n        break;\n      case 'onAdFailedToLoad':\n        emitData = nativeToJSError(event.payload.code, event.payload.message);\n        emitData.type = event.type;\n        break;\n      default:\n    }\n    SharedEventEmitter.emit(eventType, emitData);\n    SharedEventEmitter.emit(`rewarded_video:${this.adUnit}:*`, emitData);\n  };\n  /**\n   * Load an ad with an instance of AdRequest\n   * @param request\n   * @returns {*}\n   */\n\n  loadAd(request) {\n    let adRequest = request;\n    if (!adRequest || !Object.keys(adRequest)) {\n      adRequest = new AdRequest().addTestDevice().build();\n    }\n    return getNativeModule(this._admob).rewardedVideoLoadAd(this.adUnit, adRequest);\n  }\n  /**\n   * Set custom data\n   * @param customData\n   * @returns {*}\n   */\n\n  setCustomData(customData) {\n    return getNativeModule(this._admob).rewardedVideoSetCustomData(this.adUnit, customData);\n  }\n  /**\n   * Return a local instance of isLoaded\n   * @returns {boolean}\n   */\n\n  isLoaded() {\n    return this.loaded;\n  }\n  /**\n   * Show the advert - will only show if loaded\n   * @returns {*}\n   */\n\n  show() {\n    if (this.loaded) {\n      getNativeModule(this._admob).rewardedVideoShowAd(this.adUnit);\n    }\n  }\n  /**\n   * Listen to an Ad event\n   * @param eventType\n   * @param listenerCb\n   * @returns {null}\n   */\n\n  on(eventType, listenerCb) {\n    const types = {\n      ...statics.EventTypes,\n      ...statics.RewardedVideoEventTypes\n    };\n    if (!types[eventType]) {\n      console.warn(`Invalid event type provided, must be one of: ${Object.keys(types).join(', ')}`);\n      return null;\n    }\n    const sub = SharedEventEmitter.addListener(`rewarded_video:${this.adUnit}:${eventType}`, listenerCb);\n    subscriptions.push(sub);\n    return sub;\n  }\n}","map":{"version":3,"names":["statics","AdRequest","SharedEventEmitter","getNativeModule","nativeToJSError","subscriptions","RewardedVideo","constructor","admob","adUnit","i","len","length","remove","_admob","loaded","removeAllListeners","addListener","_onRewardedVideoEvent","event","eventType","type","emitData","Object","assign","payload","code","message","emit","loadAd","request","adRequest","keys","addTestDevice","build","rewardedVideoLoadAd","setCustomData","customData","rewardedVideoSetCustomData","isLoaded","show","rewardedVideoShowAd","on","listenerCb","types","EventTypes","RewardedVideoEventTypes","console","warn","join","sub","push"],"sources":["/Users/sharusan/MeetMyCar/myapp/node_modules/react-native-firebase/dist/modules/admob/RewardedVideo.js"],"sourcesContent":["import { statics } from './';\nimport AdRequest from './AdRequest';\nimport { SharedEventEmitter } from '../../utils/events';\nimport { getNativeModule } from '../../utils/native';\nimport { nativeToJSError } from '../../utils';\nlet subscriptions = [];\nexport default class RewardedVideo {\n  constructor(admob, adUnit) {\n    for (let i = 0, len = subscriptions.length; i < len; i++) {\n      subscriptions[i].remove();\n    }\n\n    subscriptions = [];\n    this._admob = admob;\n    this.adUnit = adUnit;\n    this.loaded = false;\n    SharedEventEmitter.removeAllListeners(`rewarded_video_${adUnit}`);\n    SharedEventEmitter.addListener(`rewarded_video_${adUnit}`, this._onRewardedVideoEvent);\n  }\n  /**\n   * Handle a JS emit event\n   * @param event\n   * @private\n   */\n\n\n  _onRewardedVideoEvent = event => {\n    const eventType = `rewarded_video:${this.adUnit}:${event.type}`;\n    let emitData = Object.assign({}, event);\n\n    switch (event.type) {\n      case 'onAdLoaded':\n        this.loaded = true;\n        break;\n\n      case 'onAdFailedToLoad':\n        emitData = nativeToJSError(event.payload.code, event.payload.message);\n        emitData.type = event.type;\n        break;\n\n      default:\n    }\n\n    SharedEventEmitter.emit(eventType, emitData);\n    SharedEventEmitter.emit(`rewarded_video:${this.adUnit}:*`, emitData);\n  };\n  /**\n   * Load an ad with an instance of AdRequest\n   * @param request\n   * @returns {*}\n   */\n\n  loadAd(request) {\n    let adRequest = request;\n\n    if (!adRequest || !Object.keys(adRequest)) {\n      adRequest = new AdRequest().addTestDevice().build();\n    }\n\n    return getNativeModule(this._admob).rewardedVideoLoadAd(this.adUnit, adRequest);\n  }\n  /**\n   * Set custom data\n   * @param customData\n   * @returns {*}\n   */\n\n\n  setCustomData(customData) {\n    return getNativeModule(this._admob).rewardedVideoSetCustomData(this.adUnit, customData);\n  }\n  /**\n   * Return a local instance of isLoaded\n   * @returns {boolean}\n   */\n\n\n  isLoaded() {\n    return this.loaded;\n  }\n  /**\n   * Show the advert - will only show if loaded\n   * @returns {*}\n   */\n\n\n  show() {\n    if (this.loaded) {\n      getNativeModule(this._admob).rewardedVideoShowAd(this.adUnit);\n    }\n  }\n  /**\n   * Listen to an Ad event\n   * @param eventType\n   * @param listenerCb\n   * @returns {null}\n   */\n\n\n  on(eventType, listenerCb) {\n    const types = { ...statics.EventTypes,\n      ...statics.RewardedVideoEventTypes\n    };\n\n    if (!types[eventType]) {\n      console.warn(`Invalid event type provided, must be one of: ${Object.keys(types).join(', ')}`);\n      return null;\n    }\n\n    const sub = SharedEventEmitter.addListener(`rewarded_video:${this.adUnit}:${eventType}`, listenerCb);\n    subscriptions.push(sub);\n    return sub;\n  }\n\n}"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}