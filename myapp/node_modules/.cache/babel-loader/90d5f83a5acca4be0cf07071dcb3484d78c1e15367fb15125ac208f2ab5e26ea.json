{"ast":null,"code":"var _jsxFileName = \"/Users/sharusan/MeetMyCar/myapp/src/Signup.js\",\n  _s = $RefreshSig$();\nimport React, { useRef, useState } from 'react';\nimport { useAuth } from './AuthContext';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst Signup = () => {\n  _s();\n  const emailRef = useRef();\n  const passwordRef = useRef();\n  const {\n    signup\n  } = useAuth();\n  const [error, setError] = useState('');\n  function handleSubmit(e) {\n    e.preventDefault();\n    if (passwordRef.current.value != passwordConfirmRef.current.value) {\n      return setError;\n    }\n    signup(emailRef.current.value, passwordRef.current.value);\n  }\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Sign Up\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Email\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 27,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: 'email',\n          ref: emailRef,\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 28,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Password\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 30,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: 'password',\n          ref: passwordRef,\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 31,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          children: \"Sign Up\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Already have an account? Log In\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true);\n};\n_s(Signup, \"259b68DeE53mfLc/ysOyhlQRfjk=\", false, function () {\n  return [useAuth];\n});\n_c = Signup;\nexport default Signup;\nvar _c;\n$RefreshReg$(_c, \"Signup\");","map":{"version":3,"names":["React","useRef","useState","useAuth","jsxDEV","_jsxDEV","Fragment","_Fragment","Signup","_s","emailRef","passwordRef","signup","error","setError","handleSubmit","e","preventDefault","current","value","passwordConfirmRef","children","fileName","_jsxFileName","lineNumber","columnNumber","type","ref","required","_c","$RefreshReg$"],"sources":["/Users/sharusan/MeetMyCar/myapp/src/Signup.js"],"sourcesContent":["import React, {useRef, useState} from 'react'\nimport { useAuth } from './AuthContext'\n\nconst Signup = () => {\n\n    const emailRef = useRef()\n    const passwordRef = useRef()\n    const {signup} = useAuth()\n    const [error, setError] = useState('')\n\n    function handleSubmit(e){\n        e.preventDefault()\n\n        if (passwordRef.current.value != passwordConfirmRef.current.value){\n            return setError\n        }\n\n        signup(emailRef.current.value, passwordRef.current.value)\n    }\n\n\n  return (\n      <>\n        <div> \n            <h1>Sign Up</h1>\n            <form>\n                <label>Email</label>\n                <input type={'email'} ref={emailRef} required/>\n\n                <label>Password</label>\n                <input type={'password'} ref={passwordRef} required/>\n\n                <button type=\"submit\">Sign Up</button>\n            </form>\n        </div>\n        <div>\n            Already have an account? Log In\n        </div>\n      </>\n    \n  )\n}\n\nexport default Signup\n\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAGC,MAAM,EAAEC,QAAQ,QAAO,OAAO;AAC7C,SAASC,OAAO,QAAQ,eAAe;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAAA,SAAAC,QAAA,IAAAC,SAAA;AAEvC,MAAMC,MAAM,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAEjB,MAAMC,QAAQ,GAAGT,MAAM,CAAC,CAAC;EACzB,MAAMU,WAAW,GAAGV,MAAM,CAAC,CAAC;EAC5B,MAAM;IAACW;EAAM,CAAC,GAAGT,OAAO,CAAC,CAAC;EAC1B,MAAM,CAACU,KAAK,EAAEC,QAAQ,CAAC,GAAGZ,QAAQ,CAAC,EAAE,CAAC;EAEtC,SAASa,YAAYA,CAACC,CAAC,EAAC;IACpBA,CAAC,CAACC,cAAc,CAAC,CAAC;IAElB,IAAIN,WAAW,CAACO,OAAO,CAACC,KAAK,IAAIC,kBAAkB,CAACF,OAAO,CAACC,KAAK,EAAC;MAC9D,OAAOL,QAAQ;IACnB;IAEAF,MAAM,CAACF,QAAQ,CAACQ,OAAO,CAACC,KAAK,EAAER,WAAW,CAACO,OAAO,CAACC,KAAK,CAAC;EAC7D;EAGF,oBACId,OAAA,CAAAE,SAAA;IAAAc,QAAA,gBACEhB,OAAA;MAAAgB,QAAA,gBACIhB,OAAA;QAAAgB,QAAA,EAAI;MAAO;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eAChBpB,OAAA;QAAAgB,QAAA,gBACIhB,OAAA;UAAAgB,QAAA,EAAO;QAAK;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAO,CAAC,eACpBpB,OAAA;UAAOqB,IAAI,EAAE,OAAQ;UAACC,GAAG,EAAEjB,QAAS;UAACkB,QAAQ;QAAA;UAAAN,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAC,CAAC,eAE/CpB,OAAA;UAAAgB,QAAA,EAAO;QAAQ;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAO,CAAC,eACvBpB,OAAA;UAAOqB,IAAI,EAAE,UAAW;UAACC,GAAG,EAAEhB,WAAY;UAACiB,QAAQ;QAAA;UAAAN,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAC,CAAC,eAErDpB,OAAA;UAAQqB,IAAI,EAAC,QAAQ;UAAAL,QAAA,EAAC;QAAO;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACpC,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACN,CAAC,eACNpB,OAAA;MAAAgB,QAAA,EAAK;IAEL;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC;EAAA,eACN,CAAC;AAGT,CAAC;AAAAhB,EAAA,CAtCKD,MAAM;EAAA,QAISL,OAAO;AAAA;AAAA0B,EAAA,GAJtBrB,MAAM;AAwCZ,eAAeA,MAAM;AAAA,IAAAqB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}