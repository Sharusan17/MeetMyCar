{"ast":null,"code":"var _jsxFileName = \"/Users/sharusan/MeetMyCar/myapp/src/VerifyEmail.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { useAuth } from './AuthContext';\nimport { useNavigate } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst VerifyEmail = () => {\n  _s();\n  const [verified, setVerified] = useState(false);\n  const {\n    currentUser\n  } = useAuth();\n  const [message, setMessage] = useState('');\n  const [error, setError] = useState('');\n  const navigate = useNavigate();\n  useEffect(() => {\n    const checkVerified = async () => {\n      await currentUser.reload();\n      if (currentUser.emailVerified) {\n        setVerified(true);\n        clearInterval(intervalId);\n        navigate(\"/registervehicle\");\n      }\n    };\n    const intervalId = setInterval(checkVerified, 1000);\n    return () => clearInterval(intervalId);\n  }, [currentUser, navigate]);\n  const resendEmail = async () => {\n    setError('');\n    setMessage('');\n    try {\n      await currentUser.sendEmailVerification();\n      setMessage(\"Verification Email Sent\");\n    } catch (error) {\n      if (error.code === 'auth/too-many-requests') {\n        setError(\"Try Again Later. Too Many Request\");\n      } else {\n        setError(\"Failed To  Send Verification Email\");\n      }\n      setError(\"Failed To Send Verification Email\");\n      console.log(\"Error Sending Verification Email\", error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"body\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        className: \"text-center mb-4\",\n        children: \"Verify Email\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          children: message\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: error\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 21\n        }, this), verified ? /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Email Verified Reloading....\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 29\n        }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"Please Verify Email. Check Inbox or Junk\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 58,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: resendEmail,\n            children: \"Resend Verification Email\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 59,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 13\n    }, this)\n  }, void 0, false);\n};\n_s(VerifyEmail, \"lE0T/Uie17ntsLaApZc3ndFwwCU=\", false, function () {\n  return [useAuth, useNavigate];\n});\n_c = VerifyEmail;\nexport default VerifyEmail;\nvar _c;\n$RefreshReg$(_c, \"VerifyEmail\");","map":{"version":3,"names":["React","useEffect","useState","useAuth","useNavigate","jsxDEV","_jsxDEV","Fragment","_Fragment","VerifyEmail","_s","verified","setVerified","currentUser","message","setMessage","error","setError","navigate","checkVerified","reload","emailVerified","clearInterval","intervalId","setInterval","resendEmail","sendEmailVerification","code","console","log","children","className","fileName","_jsxFileName","lineNumber","columnNumber","onClick","_c","$RefreshReg$"],"sources":["/Users/sharusan/MeetMyCar/myapp/src/VerifyEmail.js"],"sourcesContent":["import React, {useEffect, useState} from 'react'\nimport { useAuth } from './AuthContext'\nimport {useNavigate} from 'react-router-dom'\n\nconst VerifyEmail = () => {\n\n    const [verified, setVerified] = useState(false)\n    const {currentUser} = useAuth()\n\n    const [message, setMessage] = useState('')\n    const [error, setError] = useState('')\n\n    const navigate = useNavigate()\n\n\n    useEffect(() => {\n        const checkVerified = async () => {\n            await currentUser.reload();\n            if (currentUser.emailVerified){\n                setVerified(true)\n                clearInterval(intervalId)\n                navigate(\"/registervehicle\")\n            }\n        }\n        const intervalId = setInterval(checkVerified, 1000)\n        return () => clearInterval(intervalId)\n    }, [currentUser, navigate]); \n\n    const resendEmail = async() => {\n        setError('')\n        setMessage('')\n        try{\n            await currentUser.sendEmailVerification();\n            setMessage(\"Verification Email Sent\")\n        }catch (error){\n            if (error.code === 'auth/too-many-requests'){\n                setError(\"Try Again Later. Too Many Request\")\n            }else{\n                setError(\"Failed To  Send Verification Email\")\n            }\n            setError(\"Failed To Send Verification Email\")\n            console.log(\"Error Sending Verification Email\", error)\n        }\n    }\n\n  return (\n      <>\n            <body>\n                <h1 className=\"text-center mb-4\">Verify Email</h1>\n                <div>\n                    <p>{message}</p>\n                    <p>{error}</p>\n                    {verified \n                       ? (\n                            <p>Email Verified Reloading....</p>\n                        ):(\n                        <>\n                            <p>Please Verify Email. Check Inbox or Junk</p>\n                            <button onClick={resendEmail}>\n                                Resend Verification Email\n                            </button>\n                        </>\n                    )}\n                </div>\n            </body>\n      </> \n  )\n}\n\nexport default VerifyEmail"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}