{"ast":null,"code":"var _s = $RefreshSig$();\nimport firebase from 'firebase/compat/app';\nimport 'firebase/compat/auth';\nimport { useEffect, useState } from 'react';\nconst useFirebase = () => {\n  _s();\n  const [fbKey, setFBKey] = useState(null);\n  const [auth, setAuth] = useState(null);\n  useEffect(() => {\n    async function fetchFirebaseConfig() {\n      try {\n        const response = await fetch('http://localhost:3001/firebaseconfig');\n        if (!response.ok) {\n          throw new Error('Failed to fetch Firebase config');\n        }\n        const data = await response.json();\n        setFBKey(data);\n      } catch (error) {\n        console.error('Error fetching Firebase config:', error);\n      }\n    }\n    fetchFirebaseConfig();\n  }, []);\n  useEffect(() => {\n    if (fbKey) {\n      const app = firebase.initializeApp(fbKey);\n      const authInstance = app.auth();\n      setAuth(authInstance);\n    }\n  }, [fbKey]);\n  return {\n    auth\n  };\n};\n_s(useFirebase, \"ysS49IkB9IIaNdNpFjH14pF91Bs=\");\nconst auth = firebase.auth();\nexport default {\n  auth\n};","map":{"version":3,"names":["firebase","useEffect","useState","useFirebase","_s","fbKey","setFBKey","auth","setAuth","fetchFirebaseConfig","response","fetch","ok","Error","data","json","error","console","app","initializeApp","authInstance"],"sources":["/Users/sharusan/MeetMyCar/myapp/src/firebase.js"],"sourcesContent":["import firebase from 'firebase/compat/app';\nimport 'firebase/compat/auth';\nimport { useEffect, useState } from 'react';\n\nconst useFirebase = () => {\n    const [fbKey, setFBKey] = useState(null);\n    const [auth, setAuth] = useState(null);\n\n    useEffect(() => {\n        async function fetchFirebaseConfig() {\n            try {\n                const response = await fetch('http://localhost:3001/firebaseconfig');\n                if (!response.ok) {\n                    throw new Error('Failed to fetch Firebase config');\n                }\n                const data = await response.json(); \n                setFBKey(data);\n            } catch (error) {\n                console.error('Error fetching Firebase config:', error);\n            }\n        }\n\n        fetchFirebaseConfig();\n    }, []);\n\n    useEffect(() => {\n        if (fbKey) {\n            const app = firebase.initializeApp(fbKey);\n            const authInstance = app.auth();\n            setAuth(authInstance);\n        }\n    }, [fbKey]);\n\n    return { auth };\n};\n\nconst auth = firebase.auth();\n\nexport default { auth }; "],"mappings":";AAAA,OAAOA,QAAQ,MAAM,qBAAqB;AAC1C,OAAO,sBAAsB;AAC7B,SAASC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAE3C,MAAMC,WAAW,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACtB,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGJ,QAAQ,CAAC,IAAI,CAAC;EACxC,MAAM,CAACK,IAAI,EAAEC,OAAO,CAAC,GAAGN,QAAQ,CAAC,IAAI,CAAC;EAEtCD,SAAS,CAAC,MAAM;IACZ,eAAeQ,mBAAmBA,CAAA,EAAG;MACjC,IAAI;QACA,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,sCAAsC,CAAC;QACpE,IAAI,CAACD,QAAQ,CAACE,EAAE,EAAE;UACd,MAAM,IAAIC,KAAK,CAAC,iCAAiC,CAAC;QACtD;QACA,MAAMC,IAAI,GAAG,MAAMJ,QAAQ,CAACK,IAAI,CAAC,CAAC;QAClCT,QAAQ,CAACQ,IAAI,CAAC;MAClB,CAAC,CAAC,OAAOE,KAAK,EAAE;QACZC,OAAO,CAACD,KAAK,CAAC,iCAAiC,EAAEA,KAAK,CAAC;MAC3D;IACJ;IAEAP,mBAAmB,CAAC,CAAC;EACzB,CAAC,EAAE,EAAE,CAAC;EAENR,SAAS,CAAC,MAAM;IACZ,IAAII,KAAK,EAAE;MACP,MAAMa,GAAG,GAAGlB,QAAQ,CAACmB,aAAa,CAACd,KAAK,CAAC;MACzC,MAAMe,YAAY,GAAGF,GAAG,CAACX,IAAI,CAAC,CAAC;MAC/BC,OAAO,CAACY,YAAY,CAAC;IACzB;EACJ,CAAC,EAAE,CAACf,KAAK,CAAC,CAAC;EAEX,OAAO;IAAEE;EAAK,CAAC;AACnB,CAAC;AAACH,EAAA,CA9BID,WAAW;AAgCjB,MAAMI,IAAI,GAAGP,QAAQ,CAACO,IAAI,CAAC,CAAC;AAE5B,eAAe;EAAEA;AAAK,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}