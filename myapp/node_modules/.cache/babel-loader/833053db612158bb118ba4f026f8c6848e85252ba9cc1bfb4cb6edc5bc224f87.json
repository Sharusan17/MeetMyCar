{"ast":null,"code":"/**\n * \n * AndroidRemoteInput representation wrapper\n */\nexport default class AndroidRemoteInput {\n  constructor(resultKey) {\n    this._allowedDataTypes = [];\n    this._choices = [];\n    this._resultKey = resultKey;\n  }\n  get allowedDataTypes() {\n    return this._allowedDataTypes;\n  }\n  get allowFreeFormInput() {\n    return this._allowFreeFormInput;\n  }\n  get choices() {\n    return this._choices;\n  }\n  get label() {\n    return this._label;\n  }\n  get resultKey() {\n    return this._resultKey;\n  }\n  /**\n   *\n   * @param mimeType\n   * @param allow\n   * @returns {AndroidRemoteInput}\n   */\n\n  setAllowDataType(mimeType, allow) {\n    this._allowedDataTypes.push({\n      allow,\n      mimeType\n    });\n    return this;\n  }\n  /**\n   *\n   * @param allowFreeFormInput\n   * @returns {AndroidRemoteInput}\n   */\n\n  setAllowFreeFormInput(allowFreeFormInput) {\n    this._allowFreeFormInput = allowFreeFormInput;\n    return this;\n  }\n  /**\n   *\n   * @param choices\n   * @returns {AndroidRemoteInput}\n   */\n\n  setChoices(choices) {\n    this._choices = choices;\n    return this;\n  }\n  /**\n   *\n   * @param label\n   * @returns {AndroidRemoteInput}\n   */\n\n  setLabel(label) {\n    this._label = label;\n    return this;\n  }\n  build() {\n    if (!this._resultKey) {\n      throw new Error('AndroidRemoteInput: Missing required `resultKey` property');\n    }\n    return {\n      allowedDataTypes: this._allowedDataTypes,\n      allowFreeFormInput: this._allowFreeFormInput,\n      choices: this._choices,\n      label: this._label,\n      resultKey: this._resultKey\n    };\n  }\n}\nexport const fromNativeAndroidRemoteInput = nativeRemoteInput => {\n  const remoteInput = new AndroidRemoteInput(nativeRemoteInput.resultKey);\n  if (nativeRemoteInput.allowedDataTypes) {\n    for (let i = 0; i < nativeRemoteInput.allowedDataTypes.length; i++) {\n      const allowDataType = nativeRemoteInput.allowedDataTypes[i];\n      remoteInput.setAllowDataType(allowDataType.mimeType, allowDataType.allow);\n    }\n  }\n  if (nativeRemoteInput.allowFreeFormInput) {\n    remoteInput.setAllowFreeFormInput(nativeRemoteInput.allowFreeFormInput);\n  }\n  if (nativeRemoteInput.choices) {\n    remoteInput.setChoices(nativeRemoteInput.choices);\n  }\n  if (nativeRemoteInput.label) {\n    remoteInput.setLabel(nativeRemoteInput.label);\n  }\n  return remoteInput;\n};","map":{"version":3,"names":["AndroidRemoteInput","constructor","resultKey","_allowedDataTypes","_choices","_resultKey","allowedDataTypes","allowFreeFormInput","_allowFreeFormInput","choices","label","_label","setAllowDataType","mimeType","allow","push","setAllowFreeFormInput","setChoices","setLabel","build","Error","fromNativeAndroidRemoteInput","nativeRemoteInput","remoteInput","i","length","allowDataType"],"sources":["/Users/sharusan/MeetMyCar/myapp/node_modules/react-native-firebase/dist/modules/notifications/AndroidRemoteInput.js"],"sourcesContent":["/**\n * \n * AndroidRemoteInput representation wrapper\n */\nexport default class AndroidRemoteInput {\n  constructor(resultKey) {\n    this._allowedDataTypes = [];\n    this._choices = [];\n    this._resultKey = resultKey;\n  }\n\n  get allowedDataTypes() {\n    return this._allowedDataTypes;\n  }\n\n  get allowFreeFormInput() {\n    return this._allowFreeFormInput;\n  }\n\n  get choices() {\n    return this._choices;\n  }\n\n  get label() {\n    return this._label;\n  }\n\n  get resultKey() {\n    return this._resultKey;\n  }\n  /**\n   *\n   * @param mimeType\n   * @param allow\n   * @returns {AndroidRemoteInput}\n   */\n\n\n  setAllowDataType(mimeType, allow) {\n    this._allowedDataTypes.push({\n      allow,\n      mimeType\n    });\n\n    return this;\n  }\n  /**\n   *\n   * @param allowFreeFormInput\n   * @returns {AndroidRemoteInput}\n   */\n\n\n  setAllowFreeFormInput(allowFreeFormInput) {\n    this._allowFreeFormInput = allowFreeFormInput;\n    return this;\n  }\n  /**\n   *\n   * @param choices\n   * @returns {AndroidRemoteInput}\n   */\n\n\n  setChoices(choices) {\n    this._choices = choices;\n    return this;\n  }\n  /**\n   *\n   * @param label\n   * @returns {AndroidRemoteInput}\n   */\n\n\n  setLabel(label) {\n    this._label = label;\n    return this;\n  }\n\n  build() {\n    if (!this._resultKey) {\n      throw new Error('AndroidRemoteInput: Missing required `resultKey` property');\n    }\n\n    return {\n      allowedDataTypes: this._allowedDataTypes,\n      allowFreeFormInput: this._allowFreeFormInput,\n      choices: this._choices,\n      label: this._label,\n      resultKey: this._resultKey\n    };\n  }\n\n}\nexport const fromNativeAndroidRemoteInput = nativeRemoteInput => {\n  const remoteInput = new AndroidRemoteInput(nativeRemoteInput.resultKey);\n\n  if (nativeRemoteInput.allowedDataTypes) {\n    for (let i = 0; i < nativeRemoteInput.allowedDataTypes.length; i++) {\n      const allowDataType = nativeRemoteInput.allowedDataTypes[i];\n      remoteInput.setAllowDataType(allowDataType.mimeType, allowDataType.allow);\n    }\n  }\n\n  if (nativeRemoteInput.allowFreeFormInput) {\n    remoteInput.setAllowFreeFormInput(nativeRemoteInput.allowFreeFormInput);\n  }\n\n  if (nativeRemoteInput.choices) {\n    remoteInput.setChoices(nativeRemoteInput.choices);\n  }\n\n  if (nativeRemoteInput.label) {\n    remoteInput.setLabel(nativeRemoteInput.label);\n  }\n\n  return remoteInput;\n};"],"mappings":"AAAA;AACA;AACA;AACA;AACA,eAAe,MAAMA,kBAAkB,CAAC;EACtCC,WAAWA,CAACC,SAAS,EAAE;IACrB,IAAI,CAACC,iBAAiB,GAAG,EAAE;IAC3B,IAAI,CAACC,QAAQ,GAAG,EAAE;IAClB,IAAI,CAACC,UAAU,GAAGH,SAAS;EAC7B;EAEA,IAAII,gBAAgBA,CAAA,EAAG;IACrB,OAAO,IAAI,CAACH,iBAAiB;EAC/B;EAEA,IAAII,kBAAkBA,CAAA,EAAG;IACvB,OAAO,IAAI,CAACC,mBAAmB;EACjC;EAEA,IAAIC,OAAOA,CAAA,EAAG;IACZ,OAAO,IAAI,CAACL,QAAQ;EACtB;EAEA,IAAIM,KAAKA,CAAA,EAAG;IACV,OAAO,IAAI,CAACC,MAAM;EACpB;EAEA,IAAIT,SAASA,CAAA,EAAG;IACd,OAAO,IAAI,CAACG,UAAU;EACxB;EACA;AACF;AACA;AACA;AACA;AACA;;EAGEO,gBAAgBA,CAACC,QAAQ,EAAEC,KAAK,EAAE;IAChC,IAAI,CAACX,iBAAiB,CAACY,IAAI,CAAC;MAC1BD,KAAK;MACLD;IACF,CAAC,CAAC;IAEF,OAAO,IAAI;EACb;EACA;AACF;AACA;AACA;AACA;;EAGEG,qBAAqBA,CAACT,kBAAkB,EAAE;IACxC,IAAI,CAACC,mBAAmB,GAAGD,kBAAkB;IAC7C,OAAO,IAAI;EACb;EACA;AACF;AACA;AACA;AACA;;EAGEU,UAAUA,CAACR,OAAO,EAAE;IAClB,IAAI,CAACL,QAAQ,GAAGK,OAAO;IACvB,OAAO,IAAI;EACb;EACA;AACF;AACA;AACA;AACA;;EAGES,QAAQA,CAACR,KAAK,EAAE;IACd,IAAI,CAACC,MAAM,GAAGD,KAAK;IACnB,OAAO,IAAI;EACb;EAEAS,KAAKA,CAAA,EAAG;IACN,IAAI,CAAC,IAAI,CAACd,UAAU,EAAE;MACpB,MAAM,IAAIe,KAAK,CAAC,2DAA2D,CAAC;IAC9E;IAEA,OAAO;MACLd,gBAAgB,EAAE,IAAI,CAACH,iBAAiB;MACxCI,kBAAkB,EAAE,IAAI,CAACC,mBAAmB;MAC5CC,OAAO,EAAE,IAAI,CAACL,QAAQ;MACtBM,KAAK,EAAE,IAAI,CAACC,MAAM;MAClBT,SAAS,EAAE,IAAI,CAACG;IAClB,CAAC;EACH;AAEF;AACA,OAAO,MAAMgB,4BAA4B,GAAGC,iBAAiB,IAAI;EAC/D,MAAMC,WAAW,GAAG,IAAIvB,kBAAkB,CAACsB,iBAAiB,CAACpB,SAAS,CAAC;EAEvE,IAAIoB,iBAAiB,CAAChB,gBAAgB,EAAE;IACtC,KAAK,IAAIkB,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGF,iBAAiB,CAAChB,gBAAgB,CAACmB,MAAM,EAAED,CAAC,EAAE,EAAE;MAClE,MAAME,aAAa,GAAGJ,iBAAiB,CAAChB,gBAAgB,CAACkB,CAAC,CAAC;MAC3DD,WAAW,CAACX,gBAAgB,CAACc,aAAa,CAACb,QAAQ,EAAEa,aAAa,CAACZ,KAAK,CAAC;IAC3E;EACF;EAEA,IAAIQ,iBAAiB,CAACf,kBAAkB,EAAE;IACxCgB,WAAW,CAACP,qBAAqB,CAACM,iBAAiB,CAACf,kBAAkB,CAAC;EACzE;EAEA,IAAIe,iBAAiB,CAACb,OAAO,EAAE;IAC7Bc,WAAW,CAACN,UAAU,CAACK,iBAAiB,CAACb,OAAO,CAAC;EACnD;EAEA,IAAIa,iBAAiB,CAACZ,KAAK,EAAE;IAC3Ba,WAAW,CAACL,QAAQ,CAACI,iBAAiB,CAACZ,KAAK,CAAC;EAC/C;EAEA,OAAOa,WAAW;AACpB,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}