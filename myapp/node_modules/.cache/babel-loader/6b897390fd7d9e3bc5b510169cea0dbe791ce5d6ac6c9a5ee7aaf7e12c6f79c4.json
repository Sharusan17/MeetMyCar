{"ast":null,"code":"/**\n * \n * AndroidChannel representation wrapper\n */\nimport { Importance, Visibility } from './types';\nexport default class AndroidChannel {\n  constructor(channelId, name, importance) {\n    if (!Object.values(Importance).includes(importance)) {\n      throw new Error(`AndroidChannel() Invalid Importance: ${importance}`);\n    }\n    this._channelId = channelId;\n    this._name = name;\n    this._importance = importance;\n  }\n  get bypassDnd() {\n    return this._bypassDnd;\n  }\n  get channelId() {\n    return this._channelId;\n  }\n  get description() {\n    return this._description;\n  }\n  get group() {\n    return this._group;\n  }\n  get importance() {\n    return this._importance;\n  }\n  get lightColor() {\n    return this._lightColor;\n  }\n  get lightsEnabled() {\n    return this._lightsEnabled;\n  }\n  get lockScreenVisibility() {\n    return this._lockScreenVisibility;\n  }\n  get name() {\n    return this._name;\n  }\n  get showBadge() {\n    return this._showBadge;\n  }\n  get sound() {\n    return this._sound;\n  }\n  get vibrationEnabled() {\n    return this._vibrationEnabled;\n  }\n  get vibrationPattern() {\n    return this._vibrationPattern;\n  }\n  /**\n   *\n   * @param lightsEnabled\n   * @returns {AndroidChannel}\n   */\n\n  enableLights(lightsEnabled) {\n    this._lightsEnabled = lightsEnabled;\n    return this;\n  }\n  /**\n   *\n   * @param vibrationEnabled\n   * @returns {AndroidChannel}\n   */\n\n  enableVibration(vibrationEnabled) {\n    this._vibrationEnabled = vibrationEnabled;\n    return this;\n  }\n  /**\n   *\n   * @param bypassDnd\n   * @returns {AndroidChannel}\n   */\n\n  setBypassDnd(bypassDnd) {\n    this._bypassDnd = bypassDnd;\n    return this;\n  }\n  /**\n   *\n   * @param description\n   * @returns {AndroidChannel}\n   */\n\n  setDescription(description) {\n    this._description = description;\n    return this;\n  }\n  /**\n   *\n   * @param group\n   * @returns {AndroidChannel}\n   */\n\n  setGroup(groupId) {\n    this._group = groupId;\n    return this;\n  }\n  /**\n   *\n   * @param lightColor\n   * @returns {AndroidChannel}\n   */\n\n  setLightColor(lightColor) {\n    this._lightColor = lightColor;\n    return this;\n  }\n  /**\n   *\n   * @param lockScreenVisibility\n   * @returns {AndroidChannel}\n   */\n\n  setLockScreenVisibility(lockScreenVisibility) {\n    if (!Object.values(Visibility).includes(lockScreenVisibility)) {\n      throw new Error(`AndroidChannel:setLockScreenVisibility Invalid Visibility: ${lockScreenVisibility}`);\n    }\n    this._lockScreenVisibility = lockScreenVisibility;\n    return this;\n  }\n  /**\n   *\n   * @param showBadge\n   * @returns {AndroidChannel}\n   */\n\n  setShowBadge(showBadge) {\n    this._showBadge = showBadge;\n    return this;\n  }\n  /**\n   *\n   * @param sound\n   * @returns {AndroidChannel}\n   */\n\n  setSound(sound) {\n    this._sound = sound;\n    return this;\n  }\n  /**\n   *\n   * @param vibrationPattern\n   * @returns {AndroidChannel}\n   */\n\n  setVibrationPattern(vibrationPattern) {\n    this._vibrationPattern = vibrationPattern;\n    return this;\n  }\n  build() {\n    if (!this._channelId) {\n      throw new Error('AndroidChannel: Missing required `channelId` property');\n    } else if (!this._importance) {\n      throw new Error('AndroidChannel: Missing required `importance` property');\n    } else if (!this._name) {\n      throw new Error('AndroidChannel: Missing required `name` property');\n    }\n    return {\n      bypassDnd: this._bypassDnd,\n      channelId: this._channelId,\n      description: this._description,\n      group: this._group,\n      importance: this._importance,\n      lightColor: this._lightColor,\n      lightsEnabled: this._lightsEnabled,\n      lockScreenVisibility: this._lockScreenVisibility,\n      name: this._name,\n      showBadge: this._showBadge,\n      sound: this._sound,\n      vibrationEnabled: this._vibrationEnabled,\n      vibrationPattern: this._vibrationPattern\n    };\n  }\n}","map":{"version":3,"names":["Importance","Visibility","AndroidChannel","constructor","channelId","name","importance","Object","values","includes","Error","_channelId","_name","_importance","bypassDnd","_bypassDnd","description","_description","group","_group","lightColor","_lightColor","lightsEnabled","_lightsEnabled","lockScreenVisibility","_lockScreenVisibility","showBadge","_showBadge","sound","_sound","vibrationEnabled","_vibrationEnabled","vibrationPattern","_vibrationPattern","enableLights","enableVibration","setBypassDnd","setDescription","setGroup","groupId","setLightColor","setLockScreenVisibility","setShowBadge","setSound","setVibrationPattern","build"],"sources":["/Users/sharusan/MeetMyCar/myapp/node_modules/react-native-firebase/dist/modules/notifications/AndroidChannel.js"],"sourcesContent":["/**\n * \n * AndroidChannel representation wrapper\n */\nimport { Importance, Visibility } from './types';\nexport default class AndroidChannel {\n  constructor(channelId, name, importance) {\n    if (!Object.values(Importance).includes(importance)) {\n      throw new Error(`AndroidChannel() Invalid Importance: ${importance}`);\n    }\n\n    this._channelId = channelId;\n    this._name = name;\n    this._importance = importance;\n  }\n\n  get bypassDnd() {\n    return this._bypassDnd;\n  }\n\n  get channelId() {\n    return this._channelId;\n  }\n\n  get description() {\n    return this._description;\n  }\n\n  get group() {\n    return this._group;\n  }\n\n  get importance() {\n    return this._importance;\n  }\n\n  get lightColor() {\n    return this._lightColor;\n  }\n\n  get lightsEnabled() {\n    return this._lightsEnabled;\n  }\n\n  get lockScreenVisibility() {\n    return this._lockScreenVisibility;\n  }\n\n  get name() {\n    return this._name;\n  }\n\n  get showBadge() {\n    return this._showBadge;\n  }\n\n  get sound() {\n    return this._sound;\n  }\n\n  get vibrationEnabled() {\n    return this._vibrationEnabled;\n  }\n\n  get vibrationPattern() {\n    return this._vibrationPattern;\n  }\n  /**\n   *\n   * @param lightsEnabled\n   * @returns {AndroidChannel}\n   */\n\n\n  enableLights(lightsEnabled) {\n    this._lightsEnabled = lightsEnabled;\n    return this;\n  }\n  /**\n   *\n   * @param vibrationEnabled\n   * @returns {AndroidChannel}\n   */\n\n\n  enableVibration(vibrationEnabled) {\n    this._vibrationEnabled = vibrationEnabled;\n    return this;\n  }\n  /**\n   *\n   * @param bypassDnd\n   * @returns {AndroidChannel}\n   */\n\n\n  setBypassDnd(bypassDnd) {\n    this._bypassDnd = bypassDnd;\n    return this;\n  }\n  /**\n   *\n   * @param description\n   * @returns {AndroidChannel}\n   */\n\n\n  setDescription(description) {\n    this._description = description;\n    return this;\n  }\n  /**\n   *\n   * @param group\n   * @returns {AndroidChannel}\n   */\n\n\n  setGroup(groupId) {\n    this._group = groupId;\n    return this;\n  }\n  /**\n   *\n   * @param lightColor\n   * @returns {AndroidChannel}\n   */\n\n\n  setLightColor(lightColor) {\n    this._lightColor = lightColor;\n    return this;\n  }\n  /**\n   *\n   * @param lockScreenVisibility\n   * @returns {AndroidChannel}\n   */\n\n\n  setLockScreenVisibility(lockScreenVisibility) {\n    if (!Object.values(Visibility).includes(lockScreenVisibility)) {\n      throw new Error(`AndroidChannel:setLockScreenVisibility Invalid Visibility: ${lockScreenVisibility}`);\n    }\n\n    this._lockScreenVisibility = lockScreenVisibility;\n    return this;\n  }\n  /**\n   *\n   * @param showBadge\n   * @returns {AndroidChannel}\n   */\n\n\n  setShowBadge(showBadge) {\n    this._showBadge = showBadge;\n    return this;\n  }\n  /**\n   *\n   * @param sound\n   * @returns {AndroidChannel}\n   */\n\n\n  setSound(sound) {\n    this._sound = sound;\n    return this;\n  }\n  /**\n   *\n   * @param vibrationPattern\n   * @returns {AndroidChannel}\n   */\n\n\n  setVibrationPattern(vibrationPattern) {\n    this._vibrationPattern = vibrationPattern;\n    return this;\n  }\n\n  build() {\n    if (!this._channelId) {\n      throw new Error('AndroidChannel: Missing required `channelId` property');\n    } else if (!this._importance) {\n      throw new Error('AndroidChannel: Missing required `importance` property');\n    } else if (!this._name) {\n      throw new Error('AndroidChannel: Missing required `name` property');\n    }\n\n    return {\n      bypassDnd: this._bypassDnd,\n      channelId: this._channelId,\n      description: this._description,\n      group: this._group,\n      importance: this._importance,\n      lightColor: this._lightColor,\n      lightsEnabled: this._lightsEnabled,\n      lockScreenVisibility: this._lockScreenVisibility,\n      name: this._name,\n      showBadge: this._showBadge,\n      sound: this._sound,\n      vibrationEnabled: this._vibrationEnabled,\n      vibrationPattern: this._vibrationPattern\n    };\n  }\n\n}"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}