{"ast":null,"code":"var _jsxFileName = \"/Users/sharusan/MeetMyCar/myapp/src/VerifyEmail.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { useAuth } from './AuthContext';\nimport { useLocation, useNavigate } from 'react-router-dom';\nimport './VerifyEmail_css.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst VerifyEmail = () => {\n  _s();\n  const [verified, setVerified] = useState(false);\n  const {\n    currentUser,\n    logout\n  } = useAuth();\n  const [message, setMessage] = useState('');\n  const [error, setError] = useState('');\n  const [emailSent, setEmailSent] = useState(false);\n  const navigate = useNavigate();\n  const location = useLocation();\n  useEffect(() => {\n    const checkVerified = async () => {\n      const newEmail = new URLSearchParams(location.search).get('newEmail');\n      try {\n        console.log(\"Checking Verification...\");\n        //checks if email has been changed\n        await currentUser.reload();\n        if (newEmail) {\n          console.log(\"New Email Being Verified...\");\n          if (newEmail.emailVerified) {\n            console.log(\"New Email Verified\");\n            setVerified(true);\n            clearInterval(intervalId);\n            await logout();\n            navigate('/login');\n          }\n        } else {\n          await currentUser.reload();\n          console.log(\"Email Being Verified...\");\n          if (currentUser.emailVerified) {\n            console.log(\"Email Being Verified\");\n            setVerified(true);\n            clearInterval(intervalId);\n            navigate(\"/registervehicle\");\n          }\n        }\n      } catch (error) {\n        setError(error);\n        console.log('Error checking email verification status', error);\n      }\n    };\n    const intervalId = setInterval(checkVerified, 1000);\n    return () => clearInterval(intervalId);\n  }, [currentUser, location.search, navigate, logout]);\n  const resendEmail = async () => {\n    setError('');\n    setMessage('');\n    setEmailSent(true);\n    try {\n      await currentUser.sendEmailVerification();\n      setMessage(\"Verification Email Sent\");\n      setEmailSent(false);\n    } catch (error) {\n      setEmailSent(false);\n      if (error.code === 'auth/too-many-requests') {\n        setError(\"Try Again Later. Too Many Request\");\n      } else {\n        setError(\"Failed To Send Verification Email\");\n      }\n      console.log(\"Error Sending Verification Email\", error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"Card\",\n      children: [/*#__PURE__*/_jsxDEV(\"header\", {\n        children: /*#__PURE__*/_jsxDEV(\"h1\", {\n          id: \"login_text\",\n          children: \"Verify Email\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"center_H\",\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"w-100 text-center mt-3 mb-1\",\n          id: \"success_Msg\",\n          children: message\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"w-100 text-center mt-3 mb-1\",\n          id: \"error_Msg\",\n          children: error\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 21\n        }, this), verified ? /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"verify_text\",\n          children: \"Email Verified Reloading....\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 29\n        }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"verify_text\",\n            children: \"Please Verify Email. Check Inbox or Junk\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 92,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"center\",\n            children: /*#__PURE__*/_jsxDEV(\"button\", {\n              id: \"verifybtn\",\n              onClick: resendEmail,\n              disabled: emailSent,\n              children: emailSent ? 'Email Sending...' : 'Resend Verification Email'\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 95,\n              columnNumber: 33\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 93,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 13\n    }, this)\n  }, void 0, false);\n};\n_s(VerifyEmail, \"gQiKzbnskcRcMsLP6kojB+h8NoA=\", false, function () {\n  return [useAuth, useNavigate, useLocation];\n});\n_c = VerifyEmail;\nexport default VerifyEmail;\nvar _c;\n$RefreshReg$(_c, \"VerifyEmail\");","map":{"version":3,"names":["React","useEffect","useState","useAuth","useLocation","useNavigate","jsxDEV","_jsxDEV","Fragment","_Fragment","VerifyEmail","_s","verified","setVerified","currentUser","logout","message","setMessage","error","setError","emailSent","setEmailSent","navigate","location","checkVerified","newEmail","URLSearchParams","search","get","console","log","reload","emailVerified","clearInterval","intervalId","setInterval","resendEmail","sendEmailVerification","code","children","className","id","fileName","_jsxFileName","lineNumber","columnNumber","onClick","disabled","_c","$RefreshReg$"],"sources":["/Users/sharusan/MeetMyCar/myapp/src/VerifyEmail.js"],"sourcesContent":["import React, {useEffect, useState} from 'react'\nimport { useAuth } from './AuthContext'\nimport {useLocation, useNavigate} from 'react-router-dom'\n\nimport './VerifyEmail_css.css'\n\nconst VerifyEmail = () => {\n\n    const [verified, setVerified] = useState(false)\n    const {currentUser, logout} = useAuth()\n\n    const [message, setMessage] = useState('')\n    const [error, setError] = useState('')\n    const [emailSent, setEmailSent] = useState(false)\n\n    const navigate = useNavigate()\n    const location = useLocation()\n\n\n\n    useEffect(() => {\n        const checkVerified = async () => {\n            const newEmail = new URLSearchParams(location.search).get('newEmail')\n            try{\n                console.log(\"Checking Verification...\")\n                //checks if email has been changed\n                await currentUser.reload();\n                if (newEmail){\n                    console.log(\"New Email Being Verified...\")\n                    if(newEmail.emailVerified){\n                        console.log(\"New Email Verified\")\n                        setVerified(true)\n                        clearInterval(intervalId)\n                        await logout()\n                        navigate('/login')\n                    }\n                } else{\n                    await currentUser.reload();\n                    console.log(\"Email Being Verified...\")\n                    if (currentUser.emailVerified ){\n                        console.log(\"Email Being Verified\")\n                        setVerified(true)\n                        clearInterval(intervalId)\n                        navigate(\"/registervehicle\")\n                    }\n                }\n            }catch (error) {\n                setError(error)\n                console.log('Error checking email verification status', error)\n            }\n        }\n        const intervalId = setInterval(checkVerified, 1000)\n        return () => clearInterval(intervalId)\n    }, [currentUser, location.search, navigate, logout]); \n\n    const resendEmail = async() => {\n        setError('')\n        setMessage('')\n        setEmailSent(true)\n        try{ \n            await currentUser.sendEmailVerification();\n            setMessage(\"Verification Email Sent\")\n            setEmailSent(false)\n        }catch (error){\n            setEmailSent(false)\n            if (error.code === 'auth/too-many-requests'){\n                setError(\"Try Again Later. Too Many Request\")\n            }else{\n                setError(\"Failed To Send Verification Email\")\n            }\n            console.log(\"Error Sending Verification Email\", error)\n        }\n    }\n\n  return (\n      <>\n            <div className=\"Card\">\n                <header>\n                    <h1 id=\"login_text\">\n                        Verify Email\n                    </h1>\n                </header>  \n\n                <div className='center_H'>\n                    <p className=\"w-100 text-center mt-3 mb-1\" id=\"success_Msg\">{message}</p>\n                    <p className=\"w-100 text-center mt-3 mb-1\" id=\"error_Msg\">{error}</p>\n                    {verified \n                        ? (\n                            <p className='verify_text'>Email Verified Reloading....</p>\n                        ):(\n                        <>\n                            <p className='verify_text'>Please Verify Email. Check Inbox or Junk</p>\n                            <div className='center'>\n\n                                <button id=\"verifybtn\" onClick={resendEmail} disabled={emailSent}>\n                                    {emailSent ? 'Email Sending...' : 'Resend Verification Email'}\n                                </button>\n                            </div>\n                        </>\n                    )}\n                </div>                 \n            </div>\n        \n      </> \n  )\n}\n\nexport default VerifyEmail"],"mappings":";;AAAA,OAAOA,KAAK,IAAGC,SAAS,EAAEC,QAAQ,QAAO,OAAO;AAChD,SAASC,OAAO,QAAQ,eAAe;AACvC,SAAQC,WAAW,EAAEC,WAAW,QAAO,kBAAkB;AAEzD,OAAO,uBAAuB;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAAA,SAAAC,QAAA,IAAAC,SAAA;AAE9B,MAAMC,WAAW,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAEtB,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGX,QAAQ,CAAC,KAAK,CAAC;EAC/C,MAAM;IAACY,WAAW;IAAEC;EAAM,CAAC,GAAGZ,OAAO,CAAC,CAAC;EAEvC,MAAM,CAACa,OAAO,EAAEC,UAAU,CAAC,GAAGf,QAAQ,CAAC,EAAE,CAAC;EAC1C,MAAM,CAACgB,KAAK,EAAEC,QAAQ,CAAC,GAAGjB,QAAQ,CAAC,EAAE,CAAC;EACtC,MAAM,CAACkB,SAAS,EAAEC,YAAY,CAAC,GAAGnB,QAAQ,CAAC,KAAK,CAAC;EAEjD,MAAMoB,QAAQ,GAAGjB,WAAW,CAAC,CAAC;EAC9B,MAAMkB,QAAQ,GAAGnB,WAAW,CAAC,CAAC;EAI9BH,SAAS,CAAC,MAAM;IACZ,MAAMuB,aAAa,GAAG,MAAAA,CAAA,KAAY;MAC9B,MAAMC,QAAQ,GAAG,IAAIC,eAAe,CAACH,QAAQ,CAACI,MAAM,CAAC,CAACC,GAAG,CAAC,UAAU,CAAC;MACrE,IAAG;QACCC,OAAO,CAACC,GAAG,CAAC,0BAA0B,CAAC;QACvC;QACA,MAAMhB,WAAW,CAACiB,MAAM,CAAC,CAAC;QAC1B,IAAIN,QAAQ,EAAC;UACTI,OAAO,CAACC,GAAG,CAAC,6BAA6B,CAAC;UAC1C,IAAGL,QAAQ,CAACO,aAAa,EAAC;YACtBH,OAAO,CAACC,GAAG,CAAC,oBAAoB,CAAC;YACjCjB,WAAW,CAAC,IAAI,CAAC;YACjBoB,aAAa,CAACC,UAAU,CAAC;YACzB,MAAMnB,MAAM,CAAC,CAAC;YACdO,QAAQ,CAAC,QAAQ,CAAC;UACtB;QACJ,CAAC,MAAK;UACF,MAAMR,WAAW,CAACiB,MAAM,CAAC,CAAC;UAC1BF,OAAO,CAACC,GAAG,CAAC,yBAAyB,CAAC;UACtC,IAAIhB,WAAW,CAACkB,aAAa,EAAE;YAC3BH,OAAO,CAACC,GAAG,CAAC,sBAAsB,CAAC;YACnCjB,WAAW,CAAC,IAAI,CAAC;YACjBoB,aAAa,CAACC,UAAU,CAAC;YACzBZ,QAAQ,CAAC,kBAAkB,CAAC;UAChC;QACJ;MACJ,CAAC,QAAOJ,KAAK,EAAE;QACXC,QAAQ,CAACD,KAAK,CAAC;QACfW,OAAO,CAACC,GAAG,CAAC,0CAA0C,EAAEZ,KAAK,CAAC;MAClE;IACJ,CAAC;IACD,MAAMgB,UAAU,GAAGC,WAAW,CAACX,aAAa,EAAE,IAAI,CAAC;IACnD,OAAO,MAAMS,aAAa,CAACC,UAAU,CAAC;EAC1C,CAAC,EAAE,CAACpB,WAAW,EAAES,QAAQ,CAACI,MAAM,EAAEL,QAAQ,EAAEP,MAAM,CAAC,CAAC;EAEpD,MAAMqB,WAAW,GAAG,MAAAA,CAAA,KAAW;IAC3BjB,QAAQ,CAAC,EAAE,CAAC;IACZF,UAAU,CAAC,EAAE,CAAC;IACdI,YAAY,CAAC,IAAI,CAAC;IAClB,IAAG;MACC,MAAMP,WAAW,CAACuB,qBAAqB,CAAC,CAAC;MACzCpB,UAAU,CAAC,yBAAyB,CAAC;MACrCI,YAAY,CAAC,KAAK,CAAC;IACvB,CAAC,QAAOH,KAAK,EAAC;MACVG,YAAY,CAAC,KAAK,CAAC;MACnB,IAAIH,KAAK,CAACoB,IAAI,KAAK,wBAAwB,EAAC;QACxCnB,QAAQ,CAAC,mCAAmC,CAAC;MACjD,CAAC,MAAI;QACDA,QAAQ,CAAC,mCAAmC,CAAC;MACjD;MACAU,OAAO,CAACC,GAAG,CAAC,kCAAkC,EAAEZ,KAAK,CAAC;IAC1D;EACJ,CAAC;EAEH,oBACIX,OAAA,CAAAE,SAAA;IAAA8B,QAAA,eACMhC,OAAA;MAAKiC,SAAS,EAAC,MAAM;MAAAD,QAAA,gBACjBhC,OAAA;QAAAgC,QAAA,eACIhC,OAAA;UAAIkC,EAAE,EAAC,YAAY;UAAAF,QAAA,EAAC;QAEpB;UAAAG,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACD,CAAC,eAETtC,OAAA;QAAKiC,SAAS,EAAC,UAAU;QAAAD,QAAA,gBACrBhC,OAAA;UAAGiC,SAAS,EAAC,6BAA6B;UAACC,EAAE,EAAC,aAAa;UAAAF,QAAA,EAAEvB;QAAO;UAAA0B,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI,CAAC,eACzEtC,OAAA;UAAGiC,SAAS,EAAC,6BAA6B;UAACC,EAAE,EAAC,WAAW;UAAAF,QAAA,EAAErB;QAAK;UAAAwB,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI,CAAC,EACpEjC,QAAQ,gBAEDL,OAAA;UAAGiC,SAAS,EAAC,aAAa;UAAAD,QAAA,EAAC;QAA4B;UAAAG,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAG,CAAC,gBAE/DtC,OAAA,CAAAE,SAAA;UAAA8B,QAAA,gBACIhC,OAAA;YAAGiC,SAAS,EAAC,aAAa;YAAAD,QAAA,EAAC;UAAwC;YAAAG,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAG,CAAC,eACvEtC,OAAA;YAAKiC,SAAS,EAAC,QAAQ;YAAAD,QAAA,eAEnBhC,OAAA;cAAQkC,EAAE,EAAC,WAAW;cAACK,OAAO,EAAEV,WAAY;cAACW,QAAQ,EAAE3B,SAAU;cAAAmB,QAAA,EAC5DnB,SAAS,GAAG,kBAAkB,GAAG;YAA2B;cAAAsB,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACzD;UAAC;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACR,CAAC;QAAA,eACR,CACL;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACA,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACL;EAAC,gBAEV,CAAC;AAET,CAAC;AAAAlC,EAAA,CAnGKD,WAAW;EAAA,QAGiBP,OAAO,EAMpBE,WAAW,EACXD,WAAW;AAAA;AAAA4C,EAAA,GAV1BtC,WAAW;AAqGjB,eAAeA,WAAW;AAAA,IAAAsC,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}