{"ast":null,"code":"var _jsxFileName = \"/Users/sharusan/MeetMyCar/myapp/src/AuthContext.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { useContext, useEffect, useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AuthContext = /*#__PURE__*/React.createContext();\nexport function useAuth() {\n  _s();\n  return useContext(AuthContext);\n}\n_s(useAuth, \"gDsCjeeItUuvgOWf1v4qoK9RF6k=\");\nexport function AuthProvider({\n  children\n}) {\n  _s2();\n  const [currentUser, setCurrentUser] = useState();\n  const [loading, setLoading] = useState(true);\n  async function signup(email, password) {\n    try {\n      const response = await fetch(`http://localhost:3001/firebase/signup`, {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          email,\n          password\n        })\n      });\n      if (!response.ok) {\n        const errorData = await response.json();\n        throw new Error(errorData.message);\n      }\n      const data = await response.json();\n      setCurrentUser(data.user);\n      console.log(\"Signup Success\");\n    } catch (error) {\n      console.error(\"Error signing up:\", error);\n      throw error;\n    }\n  }\n  async function login(email, password) {\n    try {\n      const response = await fetch(`http://localhost:3001/firebase/login`, {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          email,\n          password\n        })\n      });\n      if (!response.ok) {\n        const errorData = await response.json();\n        throw new Error(errorData.message);\n      }\n      const data = await response.json();\n      setCurrentUser(data.user);\n      console.log(\"Login Success\");\n    } catch (error) {\n      console.error(\"Error logging in:\", error);\n      throw error;\n    }\n  }\n  async function logout() {\n    try {\n      const response = await fetch(`http://localhost:3001/firebase/logout`, {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        }\n      });\n      if (!response.ok) {\n        const errorData = await response.json();\n        throw new Error(errorData.message);\n      }\n      setCurrentUser(null);\n      console.log(\"Logout Success\");\n    } catch (error) {\n      console.error(\"Error logging out:\", error);\n      throw error;\n    }\n  }\n  async function passwordReset(email) {\n    try {\n      const response = await fetch(`http://localhost:3001/firebase/password-reset`, {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          email\n        })\n      });\n      if (!response.ok) {\n        const errorData = await response.json();\n        throw new Error(errorData.message);\n      }\n      console.log(\"Password Reset Success\");\n    } catch (error) {\n      console.error(\"Error resetting password:\", error);\n      throw error;\n    }\n  }\n  async function updateEmail(email) {\n    try {\n      const response = await fetch(`http://localhost:3001/firebase/update-email`, {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          email\n        })\n      });\n      if (!response.ok) {\n        const errorData = await response.json();\n        throw new Error(errorData.message);\n      }\n      console.log(\"Email Update Success\");\n    } catch (error) {\n      console.error(\"Error updating email:\", error);\n      throw error;\n    }\n  }\n  async function updatePassword(password) {\n    try {\n      const response = await fetch(`http://localhost:3001/firebase/update-password`, {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          password\n        })\n      });\n      if (!response.ok) {\n        const errorData = await response.json();\n        throw new Error(errorData.message);\n      }\n      console.log(\"Password Update Success\");\n    } catch (error) {\n      console.error(\"Error updating password:\", error);\n      throw error;\n    }\n  }\n  async function deleteUser() {\n    try {\n      const response = await fetch(`http://localhost:3001/firebase/delete`, {\n        method: 'DELETE',\n        headers: {\n          'Content-Type': 'application/json'\n        }\n      });\n      if (!response.ok) {\n        const errorData = await response.json();\n        throw new Error(errorData.message);\n      }\n      setCurrentUser(null);\n      console.log(\"Delete Success\");\n    } catch (error) {\n      console.error(\"Error deleting user:\", error);\n      throw error;\n    }\n  }\n  const value = {\n    currentUser,\n    signup,\n    login,\n    logout,\n    passwordReset,\n    updateEmail,\n    updatePassword,\n    deleteUser\n  };\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    value: value,\n    children: !loading && children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 192,\n    columnNumber: 5\n  }, this);\n}\n_s2(AuthProvider, \"tl0IvBXVPPRHDxChyM4IkKsqJbA=\");\n_c = AuthProvider;\nvar _c;\n$RefreshReg$(_c, \"AuthProvider\");","map":{"version":3,"names":["React","useContext","useEffect","useState","jsxDEV","_jsxDEV","AuthContext","createContext","useAuth","_s","AuthProvider","children","_s2","currentUser","setCurrentUser","loading","setLoading","signup","email","password","response","fetch","method","headers","body","JSON","stringify","ok","errorData","json","Error","message","data","user","console","log","error","login","logout","passwordReset","updateEmail","updatePassword","deleteUser","value","Provider","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/sharusan/MeetMyCar/myapp/src/AuthContext.js"],"sourcesContent":["import React, {useContext, useEffect, useState} from 'react'\n\nconst AuthContext = React.createContext()\n\nexport function useAuth() {\n    return useContext(AuthContext)\n}\n\nexport function AuthProvider ({children}) {\n    const [currentUser, setCurrentUser] = useState()\n    const [loading, setLoading] = useState(true)\n\n    async function signup(email, password){\n      try{\n          const response = await fetch(`http://localhost:3001/firebase/signup`, {\n              method: 'POST',\n              headers: {\n                'Content-Type': 'application/json'\n              },\n              body: JSON.stringify({email, password})\n          });\n\n          if (!response.ok){\n            const errorData = await response.json()\n            throw new Error(errorData.message)\n          }\n\n          const data = await response.json()\n          setCurrentUser(data.user)\n          console.log(\"Signup Success\")\n\n      } catch (error){\n          console.error(\"Error signing up:\", error)\n          throw error;\n      }\n    }\n\n    async function login(email, password){\n      try{\n          const response = await fetch(`http://localhost:3001/firebase/login`, {\n              method: 'POST',\n              headers: {\n                'Content-Type': 'application/json'\n              },\n              body: JSON.stringify({email, password})\n          });\n\n          if (!response.ok){\n            const errorData = await response.json()\n            throw new Error(errorData.message)\n          }\n\n          const data = await response.json()\n          setCurrentUser(data.user)\n          console.log(\"Login Success\")\n\n      } catch (error){\n          console.error(\"Error logging in:\", error)\n          throw error;\n      }\n    }\n\n    async function logout(){\n      try{\n          const response = await fetch(`http://localhost:3001/firebase/logout`, {\n              method: 'POST',\n              headers: {\n                'Content-Type': 'application/json'\n              }\n          });\n\n          if (!response.ok){\n            const errorData = await response.json()\n            throw new Error(errorData.message)\n          }\n\n          setCurrentUser(null)\n          console.log(\"Logout Success\")\n\n      } catch (error){\n          console.error(\"Error logging out:\", error)\n          throw error;\n      }\n    }\n\n    async function passwordReset(email){\n      try{\n          const response = await fetch(`http://localhost:3001/firebase/password-reset`, {\n              method: 'POST',\n              headers: {\n                'Content-Type': 'application/json'\n              },\n              body: JSON.stringify({email})\n          });\n\n          if (!response.ok){\n            const errorData = await response.json()\n            throw new Error(errorData.message)\n          }\n\n          console.log(\"Password Reset Success\")\n\n      } catch (error){\n          console.error(\"Error resetting password:\", error)\n          throw error;\n      }\n    }\n\n    async function updateEmail(email){\n      try{\n          const response = await fetch(`http://localhost:3001/firebase/update-email`, {\n              method: 'POST',\n              headers: {\n                'Content-Type': 'application/json'\n              },\n              body: JSON.stringify({email})\n          });\n\n          if (!response.ok){\n            const errorData = await response.json()\n            throw new Error(errorData.message)\n          }\n\n          console.log(\"Email Update Success\")\n\n      } catch (error){\n          console.error(\"Error updating email:\", error)\n          throw error;\n      }\n    }\n\n    async function updatePassword(password){\n      try{\n          const response = await fetch(`http://localhost:3001/firebase/update-password`, {\n              method: 'POST',\n              headers: {\n                'Content-Type': 'application/json'\n              },\n              body: JSON.stringify({password})\n          });\n\n          if (!response.ok){\n            const errorData = await response.json()\n            throw new Error(errorData.message)\n          }\n\n          console.log(\"Password Update Success\")\n\n      } catch (error){\n          console.error(\"Error updating password:\", error)\n          throw error;\n      }\n    }\n\n    async function deleteUser(){\n      try{\n          const response = await fetch(`http://localhost:3001/firebase/delete`, {\n              method: 'DELETE',\n              headers: {\n                'Content-Type': 'application/json'\n              }\n          });\n\n          if (!response.ok){\n            const errorData = await response.json()\n            throw new Error(errorData.message)\n          }\n\n          setCurrentUser(null)\n          console.log(\"Delete Success\")\n\n      } catch (error){\n          console.error(\"Error deleting user:\", error)\n          throw error;\n      }\n    }\n\n\n    const value  = {\n        currentUser,\n        signup,\n        login,\n        logout,\n        passwordReset,\n        updateEmail,\n        updatePassword,\n        deleteUser\n    }\n\n\n  return (\n    <AuthContext.Provider value = {value}>\n      {!loading && children}\n    </AuthContext.Provider>\n  )\n}"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}