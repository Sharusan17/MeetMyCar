{"ast":null,"code":"/**\n * \n * Query representation wrapper\n */\nimport FieldPath from './FieldPath';\nimport QuerySnapshot from './QuerySnapshot';\nimport SnapshotError from './SnapshotError';\nimport DocumentSnapshot from './DocumentSnapshot';\nimport { getNativeModule } from '../../utils/native';\nimport { buildNativeArray, buildTypeMap } from './utils/serialize';\nimport { firestoreAutoId, isFunction, isObject } from '../../utils';\nimport { getAppEventName, SharedEventEmitter } from '../../utils/events';\nconst DIRECTIONS = {\n  ASC: 'ASCENDING',\n  asc: 'ASCENDING',\n  DESC: 'DESCENDING',\n  desc: 'DESCENDING'\n};\nconst OPERATORS = {\n  '=': 'EQUAL',\n  '==': 'EQUAL',\n  '>': 'GREATER_THAN',\n  '>=': 'GREATER_THAN_OR_EQUAL',\n  '<': 'LESS_THAN',\n  '<=': 'LESS_THAN_OR_EQUAL',\n  'array-contains': 'ARRAY_CONTAINS'\n};\nfunction buildNativeFieldPath(fieldPath) {\n  if (fieldPath instanceof FieldPath) {\n    return {\n      elements: fieldPath._segments,\n      type: 'fieldpath'\n    };\n  }\n  return {\n    string: fieldPath,\n    type: 'string'\n  };\n}\n/**\n * @class Query\n */\n\nexport default class Query {\n  constructor(firestore, path, fieldFilters, fieldOrders, queryOptions) {\n    this._fieldFilters = fieldFilters || [];\n    this._fieldOrders = fieldOrders || [];\n    this._firestore = firestore;\n    this._queryOptions = queryOptions || {};\n    this._referencePath = path;\n  }\n  get firestore() {\n    return this._firestore;\n  }\n  endAt(...snapshotOrVarArgs) {\n    const options = {\n      ...this._queryOptions,\n      endAt: this._buildOrderByOption(snapshotOrVarArgs)\n    };\n    return new Query(this.firestore, this._referencePath, this._fieldFilters, this._fieldOrders, options);\n  }\n  endBefore(...snapshotOrVarArgs) {\n    const options = {\n      ...this._queryOptions,\n      endBefore: this._buildOrderByOption(snapshotOrVarArgs)\n    };\n    return new Query(this.firestore, this._referencePath, this._fieldFilters, this._fieldOrders, options);\n  }\n  get(options) {\n    if (options) {\n      if (!isObject(options)) {\n        return Promise.reject(new Error('Query.get failed: First argument must be an object.'));\n      }\n      if (options.source && options.source !== 'default' && options.source !== 'server' && options.source !== 'cache') {\n        return Promise.reject(new Error('Query.get failed: GetOptions.source must be one of `default`, `server` or `cache`.'));\n      }\n    }\n    return getNativeModule(this._firestore).collectionGet(this._referencePath.relativeName, this._fieldFilters, this._fieldOrders, this._queryOptions, options).then(nativeData => new QuerySnapshot(this._firestore, this, nativeData));\n  }\n  isEqual(otherQuery) {\n    if (!(otherQuery instanceof Query)) {\n      throw new Error('firebase.firestore.Query.isEqual(*) expects an instance of Query.');\n    }\n    if (this._firestore.app.name !== otherQuery._firestore.app.name) {\n      return false;\n    }\n    if (this._firestore.app.options.projectId !== otherQuery._firestore.app.options.projectId) {\n      return false;\n    }\n    if (this._fieldFilters.length !== otherQuery._fieldFilters.length) {\n      return false;\n    }\n    for (let i = 0; i < this._fieldFilters.length; i++) {\n      const thisFieldFilter = this._fieldFilters[i];\n      const otherFieldFilter = otherQuery._fieldFilters[i];\n      if (thisFieldFilter.fieldPath.string !== otherFieldFilter.fieldPath.string) {\n        return false;\n      }\n      if (thisFieldFilter.fieldPath.type !== otherFieldFilter.fieldPath.type) {\n        return false;\n      }\n      if (thisFieldFilter.value.type !== otherFieldFilter.value.type) {\n        return false;\n      }\n      if (thisFieldFilter.value.value !== otherFieldFilter.value.value) {\n        return false;\n      }\n      if (thisFieldFilter.operator !== otherFieldFilter.operator) {\n        return false;\n      }\n    }\n    if (this._fieldOrders.length !== otherQuery._fieldOrders.length) {\n      return false;\n    }\n    for (let i = 0; i < this._fieldOrders.length; i++) {\n      const thisFieldOrder = this._fieldOrders[i];\n      const otherFieldOrder = otherQuery._fieldOrders[i];\n      if (thisFieldOrder.direction !== otherFieldOrder.direction) {\n        return false;\n      }\n      if (thisFieldOrder.fieldPath.string !== otherFieldOrder.fieldPath.string) {\n        return false;\n      }\n      if (thisFieldOrder.fieldPath.type !== otherFieldOrder.fieldPath.type) {\n        return false;\n      }\n    }\n    return true;\n  }\n  limit(limit) {\n    // TODO: Validation\n    // validate.isInteger('n', n);\n    const options = {\n      ...this._queryOptions,\n      limit\n    };\n    return new Query(this.firestore, this._referencePath, this._fieldFilters, this._fieldOrders, options);\n  }\n  onSnapshot(optionsOrObserverOrOnNext, observerOrOnNextOrOnError, onError) {\n    // TODO refactor this ðŸ’©\n    let observer;\n    let metadataChanges = {}; // Called with: onNext, ?onError\n\n    if (isFunction(optionsOrObserverOrOnNext)) {\n      if (observerOrOnNextOrOnError && !isFunction(observerOrOnNextOrOnError)) {\n        throw new Error('Query.onSnapshot failed: Second argument must be a valid function.');\n      } // $FlowExpectedError: Not coping with the overloaded method signature\n\n      observer = {\n        next: optionsOrObserverOrOnNext,\n        error: observerOrOnNextOrOnError\n      };\n    } else if (optionsOrObserverOrOnNext && isObject(optionsOrObserverOrOnNext)) {\n      // Called with: Observer\n      if (optionsOrObserverOrOnNext.next) {\n        if (isFunction(optionsOrObserverOrOnNext.next)) {\n          if (optionsOrObserverOrOnNext.error && !isFunction(optionsOrObserverOrOnNext.error)) {\n            throw new Error('Query.onSnapshot failed: Observer.error must be a valid function.');\n          } // $FlowExpectedError: Not coping with the overloaded method signature\n\n          observer = {\n            next: optionsOrObserverOrOnNext.next,\n            error: optionsOrObserverOrOnNext.error\n          };\n        } else {\n          throw new Error('Query.onSnapshot failed: Observer.next must be a valid function.');\n        }\n      } else if (Object.prototype.hasOwnProperty.call(optionsOrObserverOrOnNext, 'includeMetadataChanges')) {\n        metadataChanges = optionsOrObserverOrOnNext; // Called with: Options, onNext, ?onError\n\n        if (isFunction(observerOrOnNextOrOnError)) {\n          if (onError && !isFunction(onError)) {\n            throw new Error('Query.onSnapshot failed: Third argument must be a valid function.');\n          } // $FlowExpectedError: Not coping with the overloaded method signature\n\n          observer = {\n            next: observerOrOnNextOrOnError,\n            error: onError\n          }; // Called with Options, Observer\n        } else if (observerOrOnNextOrOnError && isObject(observerOrOnNextOrOnError) && observerOrOnNextOrOnError.next) {\n          if (isFunction(observerOrOnNextOrOnError.next)) {\n            if (observerOrOnNextOrOnError.error && !isFunction(observerOrOnNextOrOnError.error)) {\n              throw new Error('Query.onSnapshot failed: Observer.error must be a valid function.');\n            }\n            observer = {\n              next: observerOrOnNextOrOnError.next,\n              error: observerOrOnNextOrOnError.error\n            };\n          } else {\n            throw new Error('Query.onSnapshot failed: Observer.next must be a valid function.');\n          }\n        } else {\n          throw new Error('Query.onSnapshot failed: Second argument must be a function or observer.');\n        }\n      } else {\n        throw new Error('Query.onSnapshot failed: First argument must be a function, observer or options.');\n      }\n    } else {\n      throw new Error('Query.onSnapshot failed: Called with invalid arguments.');\n    }\n    const listenerId = firestoreAutoId();\n    const listener = nativeQuerySnapshot => {\n      const querySnapshot = new QuerySnapshot(this._firestore, this, nativeQuerySnapshot);\n      observer.next(querySnapshot);\n    };\n    let unsubscribe; // Listen to snapshot events\n\n    const snapshotSubscription = SharedEventEmitter.addListener(getAppEventName(this._firestore, `onQuerySnapshot:${listenerId}`), listener); // listen for snapshot error events\n\n    const errorSubscription = SharedEventEmitter.addListener(getAppEventName(this._firestore, `onQuerySnapshotError:${listenerId}`), e => {\n      if (unsubscribe) unsubscribe();\n      const error = new SnapshotError(e);\n      if (observer.error) observer.error(error);else this.firestore.log.error(error);\n    }); // Add the native listener\n\n    getNativeModule(this._firestore).collectionOnSnapshot(this._referencePath.relativeName, this._fieldFilters, this._fieldOrders, this._queryOptions, listenerId, metadataChanges); // return an unsubscribe method\n\n    unsubscribe = () => {\n      snapshotSubscription.remove();\n      errorSubscription.remove(); // cancel native listener\n\n      getNativeModule(this._firestore).collectionOffSnapshot(this._referencePath.relativeName, this._fieldFilters, this._fieldOrders, this._queryOptions, listenerId);\n    };\n    return unsubscribe;\n  }\n  orderBy(fieldPath, directionStr = 'asc') {\n    // TODO: Validation\n    // validate.isFieldPath('fieldPath', fieldPath);\n    // validate.isOptionalFieldOrder('directionStr', directionStr);\n    if (this._queryOptions.startAt || this._queryOptions.startAfter || this._queryOptions.endAt || this._queryOptions.endBefore) {\n      throw new Error('Cannot specify an orderBy() constraint after calling ' + 'startAt(), startAfter(), endBefore() or endAt().');\n    }\n    const newOrder = {\n      direction: DIRECTIONS[directionStr],\n      fieldPath: buildNativeFieldPath(fieldPath)\n    };\n    const combinedOrders = this._fieldOrders.concat(newOrder);\n    return new Query(this.firestore, this._referencePath, this._fieldFilters, combinedOrders, this._queryOptions);\n  }\n  startAfter(...snapshotOrVarArgs) {\n    const options = {\n      ...this._queryOptions,\n      startAfter: this._buildOrderByOption(snapshotOrVarArgs)\n    };\n    return new Query(this.firestore, this._referencePath, this._fieldFilters, this._fieldOrders, options);\n  }\n  startAt(...snapshotOrVarArgs) {\n    const options = {\n      ...this._queryOptions,\n      startAt: this._buildOrderByOption(snapshotOrVarArgs)\n    };\n    return new Query(this.firestore, this._referencePath, this._fieldFilters, this._fieldOrders, options);\n  }\n  where(fieldPath, opStr, value) {\n    // TODO: Validation\n    // validate.isFieldPath('fieldPath', fieldPath);\n    // validate.isFieldFilter('fieldFilter', opStr, value);\n    const nativeValue = buildTypeMap(value);\n    const newFilter = {\n      fieldPath: buildNativeFieldPath(fieldPath),\n      operator: OPERATORS[opStr],\n      value: nativeValue\n    };\n    const combinedFilters = this._fieldFilters.concat(newFilter);\n    return new Query(this.firestore, this._referencePath, combinedFilters, this._fieldOrders, this._queryOptions);\n  }\n  /**\n   * INTERNALS\n   */\n\n  _buildOrderByOption(snapshotOrVarArgs) {\n    // TODO: Validation\n    let values;\n    if (snapshotOrVarArgs.length === 1 && snapshotOrVarArgs[0] instanceof DocumentSnapshot) {\n      const docSnapshot = snapshotOrVarArgs[0];\n      values = [];\n      for (let i = 0; i < this._fieldOrders.length; i++) {\n        const fieldOrder = this._fieldOrders[i];\n        if (fieldOrder.fieldPath.type === 'string' && fieldOrder.fieldPath.string) {\n          values.push(docSnapshot.get(fieldOrder.fieldPath.string));\n        } else if (fieldOrder.fieldPath.elements) {\n          const fieldPath = new FieldPath(...fieldOrder.fieldPath.elements);\n          values.push(docSnapshot.get(fieldPath));\n        }\n      }\n    } else {\n      values = snapshotOrVarArgs;\n    }\n    return buildNativeArray(values);\n  }\n}","map":{"version":3,"names":["FieldPath","QuerySnapshot","SnapshotError","DocumentSnapshot","getNativeModule","buildNativeArray","buildTypeMap","firestoreAutoId","isFunction","isObject","getAppEventName","SharedEventEmitter","DIRECTIONS","ASC","asc","DESC","desc","OPERATORS","buildNativeFieldPath","fieldPath","elements","_segments","type","string","Query","constructor","firestore","path","fieldFilters","fieldOrders","queryOptions","_fieldFilters","_fieldOrders","_firestore","_queryOptions","_referencePath","endAt","snapshotOrVarArgs","options","_buildOrderByOption","endBefore","get","Promise","reject","Error","source","collectionGet","relativeName","then","nativeData","isEqual","otherQuery","app","name","projectId","length","i","thisFieldFilter","otherFieldFilter","value","operator","thisFieldOrder","otherFieldOrder","direction","limit","onSnapshot","optionsOrObserverOrOnNext","observerOrOnNextOrOnError","onError","observer","metadataChanges","next","error","Object","prototype","hasOwnProperty","call","listenerId","listener","nativeQuerySnapshot","querySnapshot","unsubscribe","snapshotSubscription","addListener","errorSubscription","e","log","collectionOnSnapshot","remove","collectionOffSnapshot","orderBy","directionStr","startAt","startAfter","newOrder","combinedOrders","concat","where","opStr","nativeValue","newFilter","combinedFilters","values","docSnapshot","fieldOrder","push"],"sources":["/Users/sharusan/MeetMyCar/myapp/node_modules/react-native-firebase/dist/modules/firestore/Query.js"],"sourcesContent":["/**\n * \n * Query representation wrapper\n */\nimport FieldPath from './FieldPath';\nimport QuerySnapshot from './QuerySnapshot';\nimport SnapshotError from './SnapshotError';\nimport DocumentSnapshot from './DocumentSnapshot';\nimport { getNativeModule } from '../../utils/native';\nimport { buildNativeArray, buildTypeMap } from './utils/serialize';\nimport { firestoreAutoId, isFunction, isObject } from '../../utils';\nimport { getAppEventName, SharedEventEmitter } from '../../utils/events';\nconst DIRECTIONS = {\n  ASC: 'ASCENDING',\n  asc: 'ASCENDING',\n  DESC: 'DESCENDING',\n  desc: 'DESCENDING'\n};\nconst OPERATORS = {\n  '=': 'EQUAL',\n  '==': 'EQUAL',\n  '>': 'GREATER_THAN',\n  '>=': 'GREATER_THAN_OR_EQUAL',\n  '<': 'LESS_THAN',\n  '<=': 'LESS_THAN_OR_EQUAL',\n  'array-contains': 'ARRAY_CONTAINS'\n};\n\nfunction buildNativeFieldPath(fieldPath) {\n  if (fieldPath instanceof FieldPath) {\n    return {\n      elements: fieldPath._segments,\n      type: 'fieldpath'\n    };\n  }\n\n  return {\n    string: fieldPath,\n    type: 'string'\n  };\n}\n/**\n * @class Query\n */\n\n\nexport default class Query {\n  constructor(firestore, path, fieldFilters, fieldOrders, queryOptions) {\n    this._fieldFilters = fieldFilters || [];\n    this._fieldOrders = fieldOrders || [];\n    this._firestore = firestore;\n    this._queryOptions = queryOptions || {};\n    this._referencePath = path;\n  }\n\n  get firestore() {\n    return this._firestore;\n  }\n\n  endAt(...snapshotOrVarArgs) {\n    const options = { ...this._queryOptions,\n      endAt: this._buildOrderByOption(snapshotOrVarArgs)\n    };\n    return new Query(this.firestore, this._referencePath, this._fieldFilters, this._fieldOrders, options);\n  }\n\n  endBefore(...snapshotOrVarArgs) {\n    const options = { ...this._queryOptions,\n      endBefore: this._buildOrderByOption(snapshotOrVarArgs)\n    };\n    return new Query(this.firestore, this._referencePath, this._fieldFilters, this._fieldOrders, options);\n  }\n\n  get(options) {\n    if (options) {\n      if (!isObject(options)) {\n        return Promise.reject(new Error('Query.get failed: First argument must be an object.'));\n      }\n\n      if (options.source && options.source !== 'default' && options.source !== 'server' && options.source !== 'cache') {\n        return Promise.reject(new Error('Query.get failed: GetOptions.source must be one of `default`, `server` or `cache`.'));\n      }\n    }\n\n    return getNativeModule(this._firestore).collectionGet(this._referencePath.relativeName, this._fieldFilters, this._fieldOrders, this._queryOptions, options).then(nativeData => new QuerySnapshot(this._firestore, this, nativeData));\n  }\n\n  isEqual(otherQuery) {\n    if (!(otherQuery instanceof Query)) {\n      throw new Error('firebase.firestore.Query.isEqual(*) expects an instance of Query.');\n    }\n\n    if (this._firestore.app.name !== otherQuery._firestore.app.name) {\n      return false;\n    }\n\n    if (this._firestore.app.options.projectId !== otherQuery._firestore.app.options.projectId) {\n      return false;\n    }\n\n    if (this._fieldFilters.length !== otherQuery._fieldFilters.length) {\n      return false;\n    }\n\n    for (let i = 0; i < this._fieldFilters.length; i++) {\n      const thisFieldFilter = this._fieldFilters[i];\n      const otherFieldFilter = otherQuery._fieldFilters[i];\n\n      if (thisFieldFilter.fieldPath.string !== otherFieldFilter.fieldPath.string) {\n        return false;\n      }\n\n      if (thisFieldFilter.fieldPath.type !== otherFieldFilter.fieldPath.type) {\n        return false;\n      }\n\n      if (thisFieldFilter.value.type !== otherFieldFilter.value.type) {\n        return false;\n      }\n\n      if (thisFieldFilter.value.value !== otherFieldFilter.value.value) {\n        return false;\n      }\n\n      if (thisFieldFilter.operator !== otherFieldFilter.operator) {\n        return false;\n      }\n    }\n\n    if (this._fieldOrders.length !== otherQuery._fieldOrders.length) {\n      return false;\n    }\n\n    for (let i = 0; i < this._fieldOrders.length; i++) {\n      const thisFieldOrder = this._fieldOrders[i];\n      const otherFieldOrder = otherQuery._fieldOrders[i];\n\n      if (thisFieldOrder.direction !== otherFieldOrder.direction) {\n        return false;\n      }\n\n      if (thisFieldOrder.fieldPath.string !== otherFieldOrder.fieldPath.string) {\n        return false;\n      }\n\n      if (thisFieldOrder.fieldPath.type !== otherFieldOrder.fieldPath.type) {\n        return false;\n      }\n    }\n\n    return true;\n  }\n\n  limit(limit) {\n    // TODO: Validation\n    // validate.isInteger('n', n);\n    const options = { ...this._queryOptions,\n      limit\n    };\n    return new Query(this.firestore, this._referencePath, this._fieldFilters, this._fieldOrders, options);\n  }\n\n  onSnapshot(optionsOrObserverOrOnNext, observerOrOnNextOrOnError, onError) {\n    // TODO refactor this ðŸ’©\n    let observer;\n    let metadataChanges = {}; // Called with: onNext, ?onError\n\n    if (isFunction(optionsOrObserverOrOnNext)) {\n      if (observerOrOnNextOrOnError && !isFunction(observerOrOnNextOrOnError)) {\n        throw new Error('Query.onSnapshot failed: Second argument must be a valid function.');\n      } // $FlowExpectedError: Not coping with the overloaded method signature\n\n\n      observer = {\n        next: optionsOrObserverOrOnNext,\n        error: observerOrOnNextOrOnError\n      };\n    } else if (optionsOrObserverOrOnNext && isObject(optionsOrObserverOrOnNext)) {\n      // Called with: Observer\n      if (optionsOrObserverOrOnNext.next) {\n        if (isFunction(optionsOrObserverOrOnNext.next)) {\n          if (optionsOrObserverOrOnNext.error && !isFunction(optionsOrObserverOrOnNext.error)) {\n            throw new Error('Query.onSnapshot failed: Observer.error must be a valid function.');\n          } // $FlowExpectedError: Not coping with the overloaded method signature\n\n\n          observer = {\n            next: optionsOrObserverOrOnNext.next,\n            error: optionsOrObserverOrOnNext.error\n          };\n        } else {\n          throw new Error('Query.onSnapshot failed: Observer.next must be a valid function.');\n        }\n      } else if (Object.prototype.hasOwnProperty.call(optionsOrObserverOrOnNext, 'includeMetadataChanges')) {\n        metadataChanges = optionsOrObserverOrOnNext; // Called with: Options, onNext, ?onError\n\n        if (isFunction(observerOrOnNextOrOnError)) {\n          if (onError && !isFunction(onError)) {\n            throw new Error('Query.onSnapshot failed: Third argument must be a valid function.');\n          } // $FlowExpectedError: Not coping with the overloaded method signature\n\n\n          observer = {\n            next: observerOrOnNextOrOnError,\n            error: onError\n          }; // Called with Options, Observer\n        } else if (observerOrOnNextOrOnError && isObject(observerOrOnNextOrOnError) && observerOrOnNextOrOnError.next) {\n          if (isFunction(observerOrOnNextOrOnError.next)) {\n            if (observerOrOnNextOrOnError.error && !isFunction(observerOrOnNextOrOnError.error)) {\n              throw new Error('Query.onSnapshot failed: Observer.error must be a valid function.');\n            }\n\n            observer = {\n              next: observerOrOnNextOrOnError.next,\n              error: observerOrOnNextOrOnError.error\n            };\n          } else {\n            throw new Error('Query.onSnapshot failed: Observer.next must be a valid function.');\n          }\n        } else {\n          throw new Error('Query.onSnapshot failed: Second argument must be a function or observer.');\n        }\n      } else {\n        throw new Error('Query.onSnapshot failed: First argument must be a function, observer or options.');\n      }\n    } else {\n      throw new Error('Query.onSnapshot failed: Called with invalid arguments.');\n    }\n\n    const listenerId = firestoreAutoId();\n\n    const listener = nativeQuerySnapshot => {\n      const querySnapshot = new QuerySnapshot(this._firestore, this, nativeQuerySnapshot);\n      observer.next(querySnapshot);\n    };\n\n    let unsubscribe; // Listen to snapshot events\n\n    const snapshotSubscription = SharedEventEmitter.addListener(getAppEventName(this._firestore, `onQuerySnapshot:${listenerId}`), listener); // listen for snapshot error events\n\n    const errorSubscription = SharedEventEmitter.addListener(getAppEventName(this._firestore, `onQuerySnapshotError:${listenerId}`), e => {\n      if (unsubscribe) unsubscribe();\n      const error = new SnapshotError(e);\n      if (observer.error) observer.error(error);else this.firestore.log.error(error);\n    }); // Add the native listener\n\n    getNativeModule(this._firestore).collectionOnSnapshot(this._referencePath.relativeName, this._fieldFilters, this._fieldOrders, this._queryOptions, listenerId, metadataChanges); // return an unsubscribe method\n\n    unsubscribe = () => {\n      snapshotSubscription.remove();\n      errorSubscription.remove(); // cancel native listener\n\n      getNativeModule(this._firestore).collectionOffSnapshot(this._referencePath.relativeName, this._fieldFilters, this._fieldOrders, this._queryOptions, listenerId);\n    };\n\n    return unsubscribe;\n  }\n\n  orderBy(fieldPath, directionStr = 'asc') {\n    // TODO: Validation\n    // validate.isFieldPath('fieldPath', fieldPath);\n    // validate.isOptionalFieldOrder('directionStr', directionStr);\n    if (this._queryOptions.startAt || this._queryOptions.startAfter || this._queryOptions.endAt || this._queryOptions.endBefore) {\n      throw new Error('Cannot specify an orderBy() constraint after calling ' + 'startAt(), startAfter(), endBefore() or endAt().');\n    }\n\n    const newOrder = {\n      direction: DIRECTIONS[directionStr],\n      fieldPath: buildNativeFieldPath(fieldPath)\n    };\n\n    const combinedOrders = this._fieldOrders.concat(newOrder);\n\n    return new Query(this.firestore, this._referencePath, this._fieldFilters, combinedOrders, this._queryOptions);\n  }\n\n  startAfter(...snapshotOrVarArgs) {\n    const options = { ...this._queryOptions,\n      startAfter: this._buildOrderByOption(snapshotOrVarArgs)\n    };\n    return new Query(this.firestore, this._referencePath, this._fieldFilters, this._fieldOrders, options);\n  }\n\n  startAt(...snapshotOrVarArgs) {\n    const options = { ...this._queryOptions,\n      startAt: this._buildOrderByOption(snapshotOrVarArgs)\n    };\n    return new Query(this.firestore, this._referencePath, this._fieldFilters, this._fieldOrders, options);\n  }\n\n  where(fieldPath, opStr, value) {\n    // TODO: Validation\n    // validate.isFieldPath('fieldPath', fieldPath);\n    // validate.isFieldFilter('fieldFilter', opStr, value);\n    const nativeValue = buildTypeMap(value);\n    const newFilter = {\n      fieldPath: buildNativeFieldPath(fieldPath),\n      operator: OPERATORS[opStr],\n      value: nativeValue\n    };\n\n    const combinedFilters = this._fieldFilters.concat(newFilter);\n\n    return new Query(this.firestore, this._referencePath, combinedFilters, this._fieldOrders, this._queryOptions);\n  }\n  /**\n   * INTERNALS\n   */\n\n\n  _buildOrderByOption(snapshotOrVarArgs) {\n    // TODO: Validation\n    let values;\n\n    if (snapshotOrVarArgs.length === 1 && snapshotOrVarArgs[0] instanceof DocumentSnapshot) {\n      const docSnapshot = snapshotOrVarArgs[0];\n      values = [];\n\n      for (let i = 0; i < this._fieldOrders.length; i++) {\n        const fieldOrder = this._fieldOrders[i];\n\n        if (fieldOrder.fieldPath.type === 'string' && fieldOrder.fieldPath.string) {\n          values.push(docSnapshot.get(fieldOrder.fieldPath.string));\n        } else if (fieldOrder.fieldPath.elements) {\n          const fieldPath = new FieldPath(...fieldOrder.fieldPath.elements);\n          values.push(docSnapshot.get(fieldPath));\n        }\n      }\n    } else {\n      values = snapshotOrVarArgs;\n    }\n\n    return buildNativeArray(values);\n  }\n\n}"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}